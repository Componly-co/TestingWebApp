import {
  init_tslib_es6,
  require_fast_deep_equal,
  require_lib,
  tslib_es6_exports
} from "./chunk-EJGOSFZW.js";
import {
  require_react
} from "./chunk-OU5AQDZK.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-EWTE5DHJ.js";

// node_modules/echarts-for-react/lib/helper/pick.js
var require_pick = __commonJS({
  "node_modules/echarts-for-react/lib/helper/pick.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pick = void 0;
    function pick(obj, keys) {
      var r = {};
      keys.forEach(function(key) {
        r[key] = obj[key];
      });
      return r;
    }
    exports.pick = pick;
  }
});

// node_modules/echarts-for-react/lib/helper/is-function.js
var require_is_function = __commonJS({
  "node_modules/echarts-for-react/lib/helper/is-function.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isFunction = void 0;
    function isFunction(v) {
      return typeof v === "function";
    }
    exports.isFunction = isFunction;
  }
});

// node_modules/echarts-for-react/lib/helper/is-string.js
var require_is_string = __commonJS({
  "node_modules/echarts-for-react/lib/helper/is-string.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isString = void 0;
    function isString(v) {
      return typeof v === "string";
    }
    exports.isString = isString;
  }
});

// node_modules/echarts-for-react/lib/helper/is-equal.js
var require_is_equal = __commonJS({
  "node_modules/echarts-for-react/lib/helper/is-equal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isEqual = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var fast_deep_equal_1 = (0, tslib_1.__importDefault)(require_fast_deep_equal());
    exports.isEqual = fast_deep_equal_1.default;
  }
});

// node_modules/echarts-for-react/lib/core.js
var require_core = __commonJS({
  "node_modules/echarts-for-react/lib/core.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var react_1 = (0, tslib_1.__importStar)(require_react());
    var size_sensor_1 = require_lib();
    var pick_1 = require_pick();
    var is_function_1 = require_is_function();
    var is_string_1 = require_is_string();
    var is_equal_1 = require_is_equal();
    var EChartsReactCore = (
      /** @class */
      function(_super) {
        (0, tslib_1.__extends)(EChartsReactCore2, _super);
        function EChartsReactCore2(props) {
          var _this = _super.call(this, props) || this;
          _this.echarts = props.echarts;
          _this.ele = null;
          _this.isInitialResize = true;
          return _this;
        }
        EChartsReactCore2.prototype.componentDidMount = function() {
          this.renderNewEcharts();
        };
        EChartsReactCore2.prototype.componentDidUpdate = function(prevProps) {
          var shouldSetOption = this.props.shouldSetOption;
          if ((0, is_function_1.isFunction)(shouldSetOption) && !shouldSetOption(prevProps, this.props)) {
            return;
          }
          if (!(0, is_equal_1.isEqual)(prevProps.theme, this.props.theme) || !(0, is_equal_1.isEqual)(prevProps.opts, this.props.opts) || !(0, is_equal_1.isEqual)(prevProps.onEvents, this.props.onEvents)) {
            this.dispose();
            this.renderNewEcharts();
            return;
          }
          var pickKeys = ["option", "notMerge", "lazyUpdate", "showLoading", "loadingOption"];
          if (!(0, is_equal_1.isEqual)((0, pick_1.pick)(this.props, pickKeys), (0, pick_1.pick)(prevProps, pickKeys))) {
            this.updateEChartsOption();
          }
          if (!(0, is_equal_1.isEqual)(prevProps.style, this.props.style) || !(0, is_equal_1.isEqual)(prevProps.className, this.props.className)) {
            this.resize();
          }
        };
        EChartsReactCore2.prototype.componentWillUnmount = function() {
          this.dispose();
        };
        EChartsReactCore2.prototype.getEchartsInstance = function() {
          return this.echarts.getInstanceByDom(this.ele) || this.echarts.init(this.ele, this.props.theme, this.props.opts);
        };
        EChartsReactCore2.prototype.dispose = function() {
          if (this.ele) {
            try {
              (0, size_sensor_1.clear)(this.ele);
            } catch (e) {
              console.warn(e);
            }
            this.echarts.dispose(this.ele);
          }
        };
        EChartsReactCore2.prototype.renderNewEcharts = function() {
          var _this = this;
          var _a = this.props, onEvents = _a.onEvents, onChartReady = _a.onChartReady;
          var echartsInstance = this.updateEChartsOption();
          this.bindEvents(echartsInstance, onEvents || {});
          if ((0, is_function_1.isFunction)(onChartReady))
            onChartReady(echartsInstance);
          if (this.ele) {
            (0, size_sensor_1.bind)(this.ele, function() {
              _this.resize();
            });
          }
        };
        EChartsReactCore2.prototype.bindEvents = function(instance, events) {
          function _bindEvent(eventName2, func) {
            if ((0, is_string_1.isString)(eventName2) && (0, is_function_1.isFunction)(func)) {
              instance.on(eventName2, function(param) {
                func(param, instance);
              });
            }
          }
          for (var eventName in events) {
            if (Object.prototype.hasOwnProperty.call(events, eventName)) {
              _bindEvent(eventName, events[eventName]);
            }
          }
        };
        EChartsReactCore2.prototype.updateEChartsOption = function() {
          var _a = this.props, option = _a.option, _b = _a.notMerge, notMerge = _b === void 0 ? false : _b, _c = _a.lazyUpdate, lazyUpdate = _c === void 0 ? false : _c, showLoading = _a.showLoading, _d = _a.loadingOption, loadingOption = _d === void 0 ? null : _d;
          var echartInstance = this.getEchartsInstance();
          echartInstance.setOption(option, notMerge, lazyUpdate);
          if (showLoading)
            echartInstance.showLoading(loadingOption);
          else
            echartInstance.hideLoading();
          return echartInstance;
        };
        EChartsReactCore2.prototype.resize = function() {
          var echartsInstance = this.getEchartsInstance();
          if (!this.isInitialResize) {
            try {
              echartsInstance.resize();
            } catch (e) {
              console.warn(e);
            }
          }
          this.isInitialResize = false;
        };
        EChartsReactCore2.prototype.render = function() {
          var _this = this;
          var _a = this.props, style = _a.style, _b = _a.className, className = _b === void 0 ? "" : _b;
          var newStyle = (0, tslib_1.__assign)({ height: 300 }, style);
          return react_1.default.createElement("div", { ref: function(e) {
            _this.ele = e;
          }, style: newStyle, className: "echarts-for-react " + className });
        };
        return EChartsReactCore2;
      }(react_1.PureComponent)
    );
    exports.default = EChartsReactCore;
  }
});
export default require_core();
//# sourceMappingURL=echarts-for-react_lib_core.js.map
