"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseReact = void 0;
var package_json_1 = require("../../utils/package-json");
var imported_1 = require("./components/imported");
var self_declared_1 = require("./components/self-declared");
var count_1 = require("./utils/count");
var names_1 = require("./utils/names");
var project_1 = require("./utils/project");
var utils_1 = require("./utils/utils");
var web_components_1 = require("./components/web-components");
var ts_morph_1 = require("ts-morph");
function parseReact(_a) {
    var designSystems = _a.designSystems, project = _a.project, ignorePatterns = _a.ignorePatterns;
    return __awaiter(this, void 0, void 0, function () {
        var projectPath, componlyConfig, jsConfig, tsConfig, mergedConfig, projectInstance, dependencies, importedReactComponents, stencilDict, importedStencilComponents, projectForWebComponents, allWebComponents, usedWebComponents, selfDeclaredComponents, selfDeclaredComponentsWithoutExclude, routes, pages, importedComponents, withOverridenBy, webComponentsWithOverridenBy, componentStatistics, components;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    projectPath = project !== null && project !== void 0 ? project : process.cwd();
                    return [4, (0, utils_1.readJsConfig)('componly.config.json')];
                case 1:
                    componlyConfig = _b.sent();
                    return [4, (0, utils_1.readJsConfig)('jsconfig.json')];
                case 2:
                    jsConfig = _b.sent();
                    return [4, (0, utils_1.readJsConfig)('tsconfig.json')];
                case 3:
                    tsConfig = _b.sent();
                    mergedConfig = __assign(__assign(__assign({}, tsConfig), jsConfig), componlyConfig);
                    return [4, (0, project_1.createProject)(project, ignorePatterns)];
                case 4:
                    projectInstance = _b.sent();
                    return [4, (0, package_json_1.getDependencies)(project)];
                case 5:
                    dependencies = _b.sent();
                    importedReactComponents = (0, imported_1.getImportedComponents)({
                        project: projectInstance,
                        designSystems: designSystems !== null && designSystems !== void 0 ? designSystems : [],
                        projectPath: projectPath,
                        dependencies: dependencies
                    });
                    return [4, (0, names_1.getStencilComponentNames)(project)];
                case 6:
                    stencilDict = _b.sent();
                    importedStencilComponents = (0, imported_1.getExternalStencilComponents)({
                        projectInstance: projectInstance,
                        stencilDict: stencilDict,
                        designSystems: designSystems !== null && designSystems !== void 0 ? designSystems : [],
                        projectPath: projectPath,
                    });
                    projectForWebComponents = new ts_morph_1.Project({
                        tsConfigFilePath: "".concat(process.cwd(), "/componly.config.json"),
                        compilerOptions: {
                            target: ts_morph_1.ScriptTarget.Latest,
                        },
                    });
                    return [4, (0, web_components_1.getNodeModuleWebComponents)({ sourceFiles: projectForWebComponents.getSourceFiles(), designSystems: designSystems !== null && designSystems !== void 0 ? designSystems : [] })];
                case 7:
                    allWebComponents = (_b.sent()).flat();
                    usedWebComponents = (0, web_components_1.getJsxElements)({ sourceFiles: projectForWebComponents.getSourceFiles(), webComponents: allWebComponents, projectPath: projectPath });
                    selfDeclaredComponents = (0, self_declared_1.getSelfDeclaredComponents)({
                        project: projectInstance,
                        designSystems: designSystems !== null && designSystems !== void 0 ? designSystems : [],
                        projectPath: projectPath,
                        dependencies: dependencies,
                        importedStencilComponents: importedStencilComponents,
                        config: mergedConfig,
                        webComponents: usedWebComponents
                    });
                    (0, web_components_1.getCdnImports)(projectForWebComponents.getSourceFiles());
                    selfDeclaredComponentsWithoutExclude = selfDeclaredComponents.filter(function (component) { return !component.isPage && !component.isRoute; });
                    routes = selfDeclaredComponents.filter(function (component) { return component.isRoute; });
                    pages = selfDeclaredComponents.filter(function (component) { return component.isPage; });
                    importedComponents = __spreadArray(__spreadArray([], __read(importedReactComponents), false), __read(importedStencilComponents), false);
                    withOverridenBy = (0, count_1.addOverriddenComponents)(importedComponents, selfDeclaredComponentsWithoutExclude);
                    webComponentsWithOverridenBy = (0, count_1.addOverriddenComponents)(usedWebComponents, selfDeclaredComponentsWithoutExclude);
                    componentStatistics = (0, count_1.getComponentStatistics)(__spreadArray(__spreadArray([], __read(importedComponents), false), __read(webComponentsWithOverridenBy), false), selfDeclaredComponentsWithoutExclude);
                    components = __spreadArray(__spreadArray(__spreadArray([], __read(selfDeclaredComponentsWithoutExclude), false), __read(withOverridenBy), false), __read(webComponentsWithOverridenBy), false);
                    return [2, {
                            components: components,
                            componentStatistics: componentStatistics,
                            routes: routes,
                            pages: pages
                        }];
            }
        });
    });
}
exports.parseReact = parseReact;
