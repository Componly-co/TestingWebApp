"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCdnImports = exports.findThirdPartyComponentDesignSystems = exports.getJsxElements = exports.getNodeModuleWebComponents = void 0;
var path_1 = require("path");
var promises_1 = require("fs/promises");
var fs_1 = require("fs");
var names_1 = require("../utils/names");
var ts_morph_1 = require("ts-morph");
var minimatch_1 = require("minimatch");
var location_1 = require("../utils/location");
var lodash_1 = require("lodash");
var count_1 = require("../utils/count");
function findNearestPackageJson(filePath) {
    var currentDir = (0, path_1.dirname)(filePath);
    while (currentDir !== '/') {
        var packageJsonPath = (0, path_1.join)(currentDir, 'package.json');
        if ((0, fs_1.existsSync)(packageJsonPath)) {
            return packageJsonPath;
        }
        else {
            currentDir = (0, path_1.dirname)(currentDir);
        }
    }
    return null;
}
function readAndParsePackageJson(packageJsonPath) {
    return __awaiter(this, void 0, void 0, function () {
        var packageJsonContents, error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4, (0, promises_1.readFile)(packageJsonPath, 'utf8')];
                case 1:
                    packageJsonContents = _a.sent();
                    return [2, JSON.parse(packageJsonContents)];
                case 2:
                    error_1 = _a.sent();
                    console.error("Error reading or parsing package.json: ".concat(error_1.message));
                    return [2, {}];
                case 3: return [2];
            }
        });
    });
}
function getNodeModuleWebComponents(_a) {
    var sourceFiles = _a.sourceFiles, designSystems = _a.designSystems;
    return __awaiter(this, void 0, void 0, function () {
        var content;
        var _this = this;
        return __generator(this, function (_b) {
            content = sourceFiles.map(function (sourceFile) { return __awaiter(_this, void 0, void 0, function () {
                var packageJsonPath, packageJsonContents, componentsUsingJsDocs, componentsWithDecorate, componentsWithTypings, groupedData, componentsInfo;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            packageJsonPath = findNearestPackageJson(sourceFile.getFilePath());
                            packageJsonContents = {};
                            if (!packageJsonPath) return [3, 2];
                            return [4, readAndParsePackageJson(packageJsonPath)];
                        case 1:
                            packageJsonContents = _a.sent();
                            _a.label = 2;
                        case 2: return [4, extractUsingJsDocs({ sourceFile: sourceFile, packageJsonContents: packageJsonContents, designSystems: designSystems })];
                        case 3:
                            componentsUsingJsDocs = _a.sent();
                            return [4, extractDecorate({ sourceFile: sourceFile, packageJsonContents: packageJsonContents, designSystems: designSystems })];
                        case 4:
                            componentsWithDecorate = _a.sent();
                            return [4, extractUsingTypings({ sourceFile: sourceFile, packageJsonContents: packageJsonContents, designSystems: designSystems })];
                        case 5:
                            componentsWithTypings = _a.sent();
                            groupedData = (0, lodash_1.groupBy)(__spreadArray(__spreadArray(__spreadArray([], __read(componentsUsingJsDocs), false), __read(componentsWithDecorate), false), __read(componentsWithTypings), false), function (ele) { return ele.id; });
                            componentsInfo = Object.values(groupedData).map(function (componentInfos) {
                                return count_1.mergeObjects.apply(void 0, __spreadArray([], __read(componentInfos), false));
                            });
                            return [2, componentsInfo];
                    }
                });
            }); });
            return [2, Promise.all(content)];
        });
    });
}
exports.getNodeModuleWebComponents = getNodeModuleWebComponents;
function extractDecorate(_a) {
    var sourceFile = _a.sourceFile, packageJsonContents = _a.packageJsonContents, designSystems = _a.designSystems;
    return __awaiter(this, void 0, void 0, function () {
        var binaryExpressions, callExpressions;
        return __generator(this, function (_b) {
            binaryExpressions = sourceFile.getDescendantsOfKind(ts_morph_1.SyntaxKind.BinaryExpression);
            callExpressions = binaryExpressions
                .filter(function (expression) { return expression.getRight().isKind(ts_morph_1.SyntaxKind.CallExpression); })
                .filter(function (call) { return call.getRight().getExpression().getText() === '__decorate'; });
            return [2, callExpressions.map(function (call) {
                    var __decorate = call.getRight();
                    var arrayLiteralExpression = __decorate.getArguments()[0];
                    var customElement = arrayLiteralExpression.getElements()[0];
                    var selector = customElement.getArguments()[0].getText().trim().replace(/'/g, '').replace(/"/g, '');
                    var name = __decorate.getArguments()[1].getText().trim().replace(/'/g, '').replace(/"/g, '');
                    var lib = packageJsonContents ? packageJsonContents.name : sourceFile.getFilePath();
                    var qualifyingDesignSystems = findThirdPartyComponentDesignSystems(lib, designSystems);
                    return {
                        id: "".concat(lib, "/").concat(name),
                        selector: selector,
                        name: name,
                        library: lib,
                        designSystems: qualifyingDesignSystems,
                        isSelfDeclared: false,
                        tags: [],
                        filewiseOccurences: {},
                        totalOccurences: 0,
                        filewiseLocation: {},
                    };
                })];
        });
    });
}
function extractUsingJsDocs(_a) {
    var sourceFile = _a.sourceFile, packageJsonContents = _a.packageJsonContents, designSystems = _a.designSystems;
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_b) {
            return [2, sourceFile.getDescendantsOfKind(ts_morph_1.SyntaxKind.VariableStatement)
                    .map(function (variableStatement) {
                    var _a, _b;
                    var docs = variableStatement.getJsDocs()
                        .filter(function (doc) { return doc.getTags().map(function (tag) { return tag.getTagName(); }).includes('element'); });
                    if (docs.length) {
                        var name_1;
                        var variableDeclarationList = variableStatement.getFirstDescendantByKind(ts_morph_1.SyntaxKind.VariableDeclarationList);
                        if (variableDeclarationList) {
                            var variableDeclaration = variableDeclarationList.getFirstDescendantByKind(ts_morph_1.SyntaxKind.VariableDeclaration);
                            if (variableDeclaration) {
                                name_1 = (_a = variableDeclaration.getFirstDescendantByKind(ts_morph_1.SyntaxKind.Identifier)) === null || _a === void 0 ? void 0 : _a.getText().trim().replace(/'/g, '').replace(/"/g, '');
                            }
                        }
                        var lib = packageJsonContents ? packageJsonContents.name : sourceFile.getFilePath();
                        var qualifyingDesignSystems = findThirdPartyComponentDesignSystems(lib, designSystems);
                        return {
                            id: "".concat(lib, "/").concat(name_1),
                            selector: (_b = docs[0].getTags().find(function (tag) { return tag.getTagName() === 'element'; })) === null || _b === void 0 ? void 0 : _b.getComment(),
                            name: name_1,
                            library: lib,
                            designSystems: qualifyingDesignSystems,
                            isSelfDeclared: false,
                            tags: [],
                            filewiseOccurences: {},
                            totalOccurences: 0,
                            filewiseLocation: {},
                        };
                    }
                    return null;
                }).filter(function (s) { return s; })];
        });
    });
}
function extractUsingTypings(_a) {
    var sourceFile = _a.sourceFile, packageJsonContents = _a.packageJsonContents, designSystems = _a.designSystems;
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_b) {
            return [2, sourceFile.getDescendantsOfKind(ts_morph_1.SyntaxKind.InterfaceDeclaration)
                    .filter(function (interfaceDeclaration) { var _a; return ((_a = interfaceDeclaration.getFirstDescendantByKind(ts_morph_1.SyntaxKind.Identifier)) === null || _a === void 0 ? void 0 : _a.getText()) === 'HTMLElementTagNameMap'; })
                    .map(function (interfaceDeclaration) {
                    return interfaceDeclaration.getDescendantsOfKind(ts_morph_1.SyntaxKind.PropertySignature);
                })
                    .map(function (properties) {
                    return properties.map(function (property) {
                        var _a, _b, _c;
                        var selector = (_a = property === null || property === void 0 ? void 0 : property.getFirstDescendantByKind(ts_morph_1.SyntaxKind.StringLiteral)) === null || _a === void 0 ? void 0 : _a.getText().trim().replace(/'/g, '').replace(/"/g, '');
                        var name = (_c = (_b = property === null || property === void 0 ? void 0 : property.getFirstDescendantByKind(ts_morph_1.SyntaxKind.TypeReference)) === null || _b === void 0 ? void 0 : _b.getFirstDescendantByKind(ts_morph_1.SyntaxKind.Identifier)) === null || _c === void 0 ? void 0 : _c.getText().trim().replace(/'/g, '').replace(/"/g, '');
                        var lib = packageJsonContents ? packageJsonContents.name : sourceFile.getFilePath();
                        var qualifyingDesignSystems = findThirdPartyComponentDesignSystems(lib, designSystems);
                        return {
                            id: "".concat(lib, "/").concat(name),
                            selector: selector,
                            name: name,
                            library: lib,
                            designSystems: qualifyingDesignSystems,
                            isSelfDeclared: false,
                            tags: [],
                            filewiseOccurences: {},
                            totalOccurences: 0,
                            filewiseLocation: {},
                        };
                    });
                }).flat()];
        });
    });
}
function getJsxElements(_a) {
    var sourceFiles = _a.sourceFiles, webComponents = _a.webComponents, projectPath = _a.projectPath;
    var components = [];
    sourceFiles.forEach(function (sourceFile) {
        var jsxElementsNames = (0, names_1.getJSXElementNames)(sourceFile);
        jsxElementsNames.forEach(function (jsxElementsName) {
            var _a, _b;
            var _c;
            var found = webComponents.find(function (webc) { return jsxElementsName === webc.selector; });
            var relativePath = (0, names_1.getPathRelativeToRoot)(sourceFile, projectPath);
            if (found) {
                var countDict = (0, lodash_1.countBy)(jsxElementsNames);
                var filewiseOccurences = (_a = {},
                    _a[relativePath] = (_c = countDict[found.selector]) !== null && _c !== void 0 ? _c : 0,
                    _a);
                var filewiseLocation = (_b = {},
                    _b[relativePath] = (0, location_1.getComponentLocations)(sourceFile, found.selector),
                    _b);
                var totalOccurences = (0, lodash_1.sum)(Object.values(filewiseOccurences));
                components = __spreadArray(__spreadArray([], __read(components.filter(function (comp) { return comp.id !== (found === null || found === void 0 ? void 0 : found.id); })), false), [
                    __assign(__assign({}, found), { totalOccurences: totalOccurences, filewiseOccurences: filewiseOccurences, filewiseLocation: filewiseLocation })
                ], false);
            }
        });
    });
    var groupedData = (0, lodash_1.groupBy)(components, function (ele) { return ele.id; });
    var componentsInfo = Object.values(groupedData).map(function (componentInfos) {
        return count_1.mergeObjects.apply(void 0, __spreadArray([], __read(componentInfos), false));
    });
    return componentsInfo;
}
exports.getJsxElements = getJsxElements;
function findThirdPartyComponentDesignSystems(input, designSystems) {
    var qualifyingDesignSystems = designSystems.filter(function (_a) {
        var alias = _a.alias, relativePaths = _a.relativePaths;
        var found = false;
        var moduleSpecifier = input;
        if (Array.isArray(relativePaths) && relativePaths.length > 0) {
            found = relativePaths.some(function (relativePath) { return (0, minimatch_1.minimatch)(moduleSpecifier, relativePath) === true; });
        }
        else {
            found = moduleSpecifier.startsWith(alias);
        }
        return found;
    });
    return qualifyingDesignSystems;
}
exports.findThirdPartyComponentDesignSystems = findThirdPartyComponentDesignSystems;
function getCdnImports(sourceFiles) {
    sourceFiles.forEach(function (sourceFile) {
        var jsxElements = sourceFile.getDescendantsOfKind(ts_morph_1.SyntaxKind.JsxElement);
        var scripts = jsxElements.filter(function (jsxElement) { return (0, names_1.getTagName)(jsxElement.getOpeningElement()) === 'script'; });
        if (scripts.length) {
            scripts.forEach(function (script) {
                var attributes = script.getDescendantsOfKind(ts_morph_1.SyntaxKind.JsxAttribute)
                    .filter(function (attribute) { return attribute.getDescendantsOfKind(ts_morph_1.SyntaxKind.Identifier).map(function (identifier) { return identifier.getText(); })[0] === 'src'; })
                    .map(function (attribute) {
                    return attribute.getDescendantsOfKind(ts_morph_1.SyntaxKind.StringLiteral).map(function (value) { return value.getText(); })[0].trim().replace(/'/g, '').replace(/"/g, '');
                });
                checkComponentAndUrlInUrl(attributes[0], 'cds-dropdown');
            });
        }
    });
}
exports.getCdnImports = getCdnImports;
function checkComponentAndUrlInUrl(url, targetComponent) {
    var componentRegex = new RegExp("\\b".concat(targetComponent, "\\b"));
    if (componentRegex.test(url)) {
        console.log("Found ".concat(targetComponent, " in ").concat(url));
        return true;
    }
    return false;
}
