"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getExternalStencilComponents = exports.getImportedComponents = exports.getImportedJSXComponents = void 0;
var lodash_1 = require("lodash");
var count_1 = require("../utils/count");
var design_system_1 = require("../utils/design-system");
var import_declarations_1 = require("../utils/import-declarations");
var location_1 = require("../utils/location");
var names_1 = require("../utils/names");
var project_1 = require("../utils/project");
function getImportedJSXComponents(_a) {
    var designSystems = _a.designSystems, importDeclaration = _a.importDeclaration, projectPath = _a.projectPath, dependencies = _a.dependencies;
    var sourceFile = importDeclaration.getSourceFile();
    var jsxElementsNames = (0, names_1.getJSXElementNames)(sourceFile);
    var importedEntities = (0, names_1.getImportedEntitiesNames)(importDeclaration);
    var aliasDictionary = (0, names_1.getImportAlias)(importDeclaration);
    var importedComponents = (0, lodash_1.intersection)(jsxElementsNames, importedEntities.map(function (imp) { return imp.value; }));
    var qualifyingDesignSystems = (0, design_system_1.findDesignSystems)({ input: importDeclaration, designSystems: designSystems });
    var countDict = (0, lodash_1.countBy)(jsxElementsNames);
    var output = importedComponents
        .filter(function () {
        var sortedDependencies = dependencies.sort(function (a, b) { return b.name.length - a.name.length; });
        var library = sortedDependencies.find(function (dep) { return importDeclaration.getModuleSpecifierValue().includes(dep.name); });
        return library;
    })
        .map(function (importedComponent) {
        var _a, _b;
        var _c, _d;
        var importedComponentWithType = importedEntities.find(function (imp) { return imp.value === importedComponent; });
        var relativePath = (0, names_1.getPathRelativeToRoot)(sourceFile, projectPath);
        var originalName = (_c = aliasDictionary[importedComponent]) !== null && _c !== void 0 ? _c : importedComponent;
        var id = (importedComponentWithType === null || importedComponentWithType === void 0 ? void 0 : importedComponentWithType.type) === 'named' ?
            "".concat(importDeclaration.getModuleSpecifierValue(), "/").concat(originalName) :
            importDeclaration.getModuleSpecifierValue();
        var filewiseOccurences = (_a = {},
            _a[relativePath] = (_d = countDict[importedComponent]) !== null && _d !== void 0 ? _d : 0,
            _a);
        var totalOccurences = (0, lodash_1.sum)(Object.values(filewiseOccurences));
        var filewiseLocation = (_b = {},
            _b[relativePath] = (0, location_1.getComponentLocations)(sourceFile, importedComponent),
            _b);
        var sortedDependencies = dependencies.sort(function (a, b) { return b.name.length - a.name.length; });
        var library = sortedDependencies.find(function (dep) { return importDeclaration.getModuleSpecifierValue().includes(dep.name); });
        var props = (0, names_1.getElementProps)(sourceFile, projectPath, importedComponent);
        return {
            id: id,
            library: library,
            name: originalName,
            tags: [],
            designSystems: qualifyingDesignSystems,
            isSelfDeclared: false,
            filewiseOccurences: filewiseOccurences,
            totalOccurences: totalOccurences,
            filewiseLocation: filewiseLocation,
            props: props
        };
    });
    return output;
}
exports.getImportedJSXComponents = getImportedJSXComponents;
function getImportedComponents(_a) {
    var designSystems = _a.designSystems, project = _a.project, projectPath = _a.projectPath, dependencies = _a.dependencies;
    var imports = (0, import_declarations_1.getImportDeclarations)(project, projectPath);
    var importedComponents = Object.values(imports)
        .flat()
        .filter(function (importDeclaration) { return importDeclaration.isModuleSpecifierRelative() === false; })
        .filter(function (importDeclaration) { var _a; return typeof ((_a = importDeclaration.getModuleSpecifierSourceFile()) === null || _a === void 0 ? void 0 : _a.getFilePath()) === "undefined"; })
        .flatMap(function (importDeclaration) { return getImportedJSXComponents({ importDeclaration: importDeclaration, designSystems: designSystems, projectPath: projectPath, dependencies: dependencies }); });
    var groupedData = (0, lodash_1.groupBy)(importedComponents, function (ele) { return ele.id; });
    var componentsInfo = Object.values(groupedData).map(function (componentInfos) {
        return count_1.mergeObjects.apply(void 0, __spreadArray([], __read(componentInfos), false));
    });
    return componentsInfo;
}
exports.getImportedComponents = getImportedComponents;
function getUsedStencilComponents(stencilDict, jsxElementsNames) {
    return Object.entries(stencilDict).reduce(function (acc, _a) {
        var _b;
        var _c = __read(_a, 2), module = _c[0], components = _c[1];
        var dict = acc;
        var stencilJSXElements = (0, lodash_1.intersection)(components, jsxElementsNames);
        if (stencilJSXElements.length > 0) {
            dict = __assign(__assign({}, acc), (_b = {}, _b[module] = stencilJSXElements, _b));
        }
        return dict;
    }, {});
}
function getStencilComponentsInFile(_a) {
    var designSystems = _a.designSystems, sourceFile = _a.sourceFile, stencilDict = _a.stencilDict, projectPath = _a.projectPath;
    var relativePath = (0, names_1.getPathRelativeToRoot)(sourceFile, projectPath);
    var jsxElements = (0, names_1.getJSXElementNames)(sourceFile);
    var countDict = (0, lodash_1.countBy)(jsxElements);
    var stencilComponents = getUsedStencilComponents(stencilDict, jsxElements);
    var componentInfos = Object.entries(stencilComponents).flatMap(function (_a) {
        var _b = __read(_a, 2), module = _b[0], components = _b[1];
        return components.map(function (component) {
            var _a, _b;
            var _c;
            var filewiseOccurences = (_a = {},
                _a[relativePath] = (_c = countDict[component]) !== null && _c !== void 0 ? _c : 0,
                _a);
            var filewiseLocation = (_b = {},
                _b[relativePath] = (0, location_1.getComponentLocations)(sourceFile, component),
                _b);
            var qualifyingDesignSystems = (0, design_system_1.findDesignSystems)({
                input: module,
                designSystems: designSystems,
            });
            return {
                id: "".concat(module, "/").concat(component),
                library: module,
                name: component,
                filewiseOccurences: filewiseOccurences,
                totalOccurences: (0, lodash_1.sum)(Object.values(filewiseOccurences)),
                tags: [],
                filewiseLocation: filewiseLocation,
                isSelfDeclared: false,
                designSystems: qualifyingDesignSystems,
                isWebComponent: true,
            };
        });
    });
    return componentInfos;
}
function getExternalStencilComponents(_a) {
    var designSystems = _a.designSystems, projectInstance = _a.projectInstance, stencilDict = _a.stencilDict, projectPath = _a.projectPath;
    var stencilComponents = projectInstance
        .getSourceFiles()
        .filter(function (ele) { return (0, project_1.isStory)(ele) === false; })
        .flatMap(function (sourceFile) { return getStencilComponentsInFile({ sourceFile: sourceFile, stencilDict: stencilDict, designSystems: designSystems, projectPath: projectPath }); });
    var groupedData = (0, lodash_1.groupBy)(stencilComponents, function (ele) { return ele.id; });
    var componentsInfo = Object.values(groupedData).map(function (componentInfos) {
        return count_1.mergeObjects.apply(void 0, __spreadArray([], __read(componentInfos), false));
    });
    return componentsInfo;
}
exports.getExternalStencilComponents = getExternalStencilComponents;
