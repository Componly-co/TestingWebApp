"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.phaseTemporaryVariables = void 0;
var o = __importStar(require("../../../../output/output_ast"));
var ir = __importStar(require("../../ir"));
function phaseTemporaryVariables(cpl) {
    var e_1, _a;
    var _loop_1 = function (unit) {
        var e_2, _d;
        var opCount = 0;
        var generatedStatements = [];
        var _loop_2 = function (op) {
            var finalReads = new Map();
            ir.visitExpressionsInOp(op, function (expr) {
                if (expr instanceof ir.ReadTemporaryExpr) {
                    finalReads.set(expr.xref, expr);
                }
            });
            var count = 0;
            var assigned = new Set();
            var released = new Set();
            var defs = new Map();
            ir.visitExpressionsInOp(op, function (expr) {
                if (expr instanceof ir.AssignTemporaryExpr) {
                    if (!assigned.has(expr.xref)) {
                        assigned.add(expr.xref);
                        defs.set(expr.xref, "tmp_".concat(opCount, "_").concat(count++));
                    }
                    assignName(defs, expr);
                }
                else if (expr instanceof ir.ReadTemporaryExpr) {
                    if (finalReads.get(expr.xref) === expr) {
                        released.add(expr.xref);
                        count--;
                    }
                    assignName(defs, expr);
                }
            });
            generatedStatements.push.apply(generatedStatements, __spreadArray([], __read(Array.from(new Set(defs.values()))
                .map(function (name) { return ir.createStatementOp(new o.DeclareVarStmt(name)); })), false));
            opCount++;
        };
        try {
            for (var _e = (e_2 = void 0, __values(unit.ops())), _f = _e.next(); !_f.done; _f = _e.next()) {
                var op = _f.value;
                _loop_2(op);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_d = _e.return)) _d.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
        unit.update.prepend(generatedStatements);
    };
    try {
        for (var _b = __values(cpl.units), _c = _b.next(); !_c.done; _c = _b.next()) {
            var unit = _c.value;
            _loop_1(unit);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
exports.phaseTemporaryVariables = phaseTemporaryVariables;
function assignName(names, expr) {
    var name = names.get(expr.xref);
    if (name === undefined) {
        throw new Error("Found xref with unassigned name: ".concat(expr.xref));
    }
    expr.name = name;
}
