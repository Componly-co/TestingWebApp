"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.phaseBindingSpecialization = void 0;
var ir = __importStar(require("../../ir"));
var compilation_1 = require("../compilation");
function lookupElement(elements, xref) {
    var el = elements.get(xref);
    if (el === undefined) {
        throw new Error('All attributes should have an element-like target.');
    }
    return el;
}
function phaseBindingSpecialization(job) {
    var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
    var elements = new Map();
    try {
        for (var _e = __values(job.units), _f = _e.next(); !_f.done; _f = _e.next()) {
            var unit = _f.value;
            try {
                for (var _g = (e_2 = void 0, __values(unit.create)), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var op = _h.value;
                    if (!ir.isElementOrContainerOp(op)) {
                        continue;
                    }
                    elements.set(op.xref, op);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
        }
        finally { if (e_1) throw e_1.error; }
    }
    try {
        for (var _j = __values(job.units), _k = _j.next(); !_k.done; _k = _j.next()) {
            var unit = _k.value;
            try {
                for (var _l = (e_4 = void 0, __values(unit.ops())), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var op = _m.value;
                    if (op.kind !== ir.OpKind.Binding) {
                        continue;
                    }
                    switch (op.bindingKind) {
                        case ir.BindingKind.Attribute:
                            if (op.name === 'ngNonBindable') {
                                ir.OpList.remove(op);
                                var target = lookupElement(elements, op.target);
                                target.nonBindable = true;
                            }
                            else {
                                ir.OpList.replace(op, ir.createAttributeOp(op.target, op.name, op.expression, op.securityContext, op.isTextAttribute, op.isTemplate, op.sourceSpan));
                            }
                            break;
                        case ir.BindingKind.Property:
                        case ir.BindingKind.Animation:
                            if (job instanceof compilation_1.HostBindingCompilationJob) {
                                ir.OpList.replace(op, ir.createHostPropertyOp(op.name, op.expression, op.sourceSpan));
                            }
                            else {
                                ir.OpList.replace(op, ir.createPropertyOp(op.target, op.name, op.expression, op.bindingKind === ir.BindingKind.Animation, op.securityContext, op.isTemplate, op.sourceSpan));
                            }
                            break;
                        case ir.BindingKind.I18n:
                        case ir.BindingKind.ClassName:
                        case ir.BindingKind.StyleProperty:
                            throw new Error("Unhandled binding of kind ".concat(ir.BindingKind[op.bindingKind]));
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
        }
        finally { if (e_3) throw e_3.error; }
    }
}
exports.phaseBindingSpecialization = phaseBindingSpecialization;
