"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAdvanceOp = exports.createAttributeOp = exports.createClassMapOp = exports.createStyleMapOp = exports.createClassPropOp = exports.createStylePropOp = exports.createPropertyOp = exports.createBindingOp = exports.Interpolation = exports.createInterpolateTextOp = void 0;
var enums_1 = require("../enums");
var traits_1 = require("../traits");
var shared_1 = require("./shared");
function createInterpolateTextOp(xref, interpolation, sourceSpan) {
    return __assign(__assign(__assign({ kind: enums_1.OpKind.InterpolateText, target: xref, interpolation: interpolation, sourceSpan: sourceSpan }, traits_1.TRAIT_DEPENDS_ON_SLOT_CONTEXT), traits_1.TRAIT_CONSUMES_VARS), shared_1.NEW_OP);
}
exports.createInterpolateTextOp = createInterpolateTextOp;
var Interpolation = (function () {
    function Interpolation(strings, expressions) {
        this.strings = strings;
        this.expressions = expressions;
    }
    return Interpolation;
}());
exports.Interpolation = Interpolation;
function createBindingOp(target, kind, name, expression, unit, securityContext, isTextAttribute, isTemplate, sourceSpan) {
    return __assign({ kind: enums_1.OpKind.Binding, bindingKind: kind, target: target, name: name, expression: expression, unit: unit, securityContext: securityContext, isTextAttribute: isTextAttribute, isTemplate: isTemplate, sourceSpan: sourceSpan }, shared_1.NEW_OP);
}
exports.createBindingOp = createBindingOp;
function createPropertyOp(target, name, expression, isAnimationTrigger, securityContext, isTemplate, sourceSpan) {
    return __assign(__assign(__assign({ kind: enums_1.OpKind.Property, target: target, name: name, expression: expression, isAnimationTrigger: isAnimationTrigger, securityContext: securityContext, sanitizer: null, isTemplate: isTemplate, sourceSpan: sourceSpan }, traits_1.TRAIT_DEPENDS_ON_SLOT_CONTEXT), traits_1.TRAIT_CONSUMES_VARS), shared_1.NEW_OP);
}
exports.createPropertyOp = createPropertyOp;
function createStylePropOp(xref, name, expression, unit, sourceSpan) {
    return __assign(__assign(__assign({ kind: enums_1.OpKind.StyleProp, target: xref, name: name, expression: expression, unit: unit, sourceSpan: sourceSpan }, traits_1.TRAIT_DEPENDS_ON_SLOT_CONTEXT), traits_1.TRAIT_CONSUMES_VARS), shared_1.NEW_OP);
}
exports.createStylePropOp = createStylePropOp;
function createClassPropOp(xref, name, expression, sourceSpan) {
    return __assign(__assign(__assign({ kind: enums_1.OpKind.ClassProp, target: xref, name: name, expression: expression, sourceSpan: sourceSpan }, traits_1.TRAIT_DEPENDS_ON_SLOT_CONTEXT), traits_1.TRAIT_CONSUMES_VARS), shared_1.NEW_OP);
}
exports.createClassPropOp = createClassPropOp;
function createStyleMapOp(xref, expression, sourceSpan) {
    return __assign(__assign(__assign({ kind: enums_1.OpKind.StyleMap, target: xref, expression: expression, sourceSpan: sourceSpan }, traits_1.TRAIT_DEPENDS_ON_SLOT_CONTEXT), traits_1.TRAIT_CONSUMES_VARS), shared_1.NEW_OP);
}
exports.createStyleMapOp = createStyleMapOp;
function createClassMapOp(xref, expression, sourceSpan) {
    return __assign(__assign(__assign({ kind: enums_1.OpKind.ClassMap, target: xref, expression: expression, sourceSpan: sourceSpan }, traits_1.TRAIT_DEPENDS_ON_SLOT_CONTEXT), traits_1.TRAIT_CONSUMES_VARS), shared_1.NEW_OP);
}
exports.createClassMapOp = createClassMapOp;
function createAttributeOp(target, name, expression, securityContext, isTextAttribute, isTemplate, sourceSpan) {
    return __assign(__assign(__assign({ kind: enums_1.OpKind.Attribute, target: target, name: name, expression: expression, securityContext: securityContext, sanitizer: null, isTextAttribute: isTextAttribute, isTemplate: isTemplate, sourceSpan: sourceSpan }, traits_1.TRAIT_DEPENDS_ON_SLOT_CONTEXT), traits_1.TRAIT_CONSUMES_VARS), shared_1.NEW_OP);
}
exports.createAttributeOp = createAttributeOp;
function createAdvanceOp(delta, sourceSpan) {
    return __assign({ kind: enums_1.OpKind.Advance, delta: delta, sourceSpan: sourceSpan }, shared_1.NEW_OP);
}
exports.createAdvanceOp = createAdvanceOp;
