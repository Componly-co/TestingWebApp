"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.i18nMetaToJSDoc = exports.parseI18nMeta = exports.I18nMetaVisitor = void 0;
var digest_1 = require("../../../i18n/digest");
var i18n = __importStar(require("../../../i18n/i18n_ast"));
var i18n_parser_1 = require("../../../i18n/i18n_parser");
var parse_util_1 = require("../../../i18n/parse_util");
var html = __importStar(require("../../../ml_parser/ast"));
var interpolation_config_1 = require("../../../ml_parser/interpolation_config");
var parser_1 = require("../../../ml_parser/parser");
var o = __importStar(require("../../../output/output_ast"));
var trusted_types_sinks_1 = require("../../../schema/trusted_types_sinks");
var util_1 = require("./util");
var setI18nRefs = function (htmlNode, i18nNode) {
    if (htmlNode instanceof html.NodeWithI18n) {
        if (i18nNode instanceof i18n.IcuPlaceholder && htmlNode.i18n instanceof i18n.Message) {
            i18nNode.previousMessage = htmlNode.i18n;
        }
        htmlNode.i18n = i18nNode;
    }
    return i18nNode;
};
var I18nMetaVisitor = (function () {
    function I18nMetaVisitor(interpolationConfig, keepI18nAttrs, enableI18nLegacyMessageIdFormat) {
        if (interpolationConfig === void 0) { interpolationConfig = interpolation_config_1.DEFAULT_INTERPOLATION_CONFIG; }
        if (keepI18nAttrs === void 0) { keepI18nAttrs = false; }
        if (enableI18nLegacyMessageIdFormat === void 0) { enableI18nLegacyMessageIdFormat = false; }
        this.interpolationConfig = interpolationConfig;
        this.keepI18nAttrs = keepI18nAttrs;
        this.enableI18nLegacyMessageIdFormat = enableI18nLegacyMessageIdFormat;
        this.hasI18nMeta = false;
        this._errors = [];
    }
    I18nMetaVisitor.prototype._generateI18nMessage = function (nodes, meta, visitNodeFn) {
        if (meta === void 0) { meta = ''; }
        var _a = this._parseMetadata(meta), meaning = _a.meaning, description = _a.description, customId = _a.customId;
        var createI18nMessage = (0, i18n_parser_1.createI18nMessageFactory)(this.interpolationConfig);
        var message = createI18nMessage(nodes, meaning, description, customId, visitNodeFn);
        this._setMessageId(message, meta);
        this._setLegacyIds(message, meta);
        return message;
    };
    I18nMetaVisitor.prototype.visitAllWithErrors = function (nodes) {
        var _this = this;
        var result = nodes.map(function (node) { return node.visit(_this, null); });
        return new parser_1.ParseTreeResult(result, this._errors);
    };
    I18nMetaVisitor.prototype.visitElement = function (element) {
        var e_1, _a, e_2, _b;
        var message = undefined;
        if ((0, util_1.hasI18nAttrs)(element)) {
            this.hasI18nMeta = true;
            var attrs = [];
            var attrsMeta = {};
            try {
                for (var _c = __values(element.attrs), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var attr = _d.value;
                    if (attr.name === util_1.I18N_ATTR) {
                        var i18n_1 = element.i18n || attr.value;
                        message = this._generateI18nMessage(element.children, i18n_1, setI18nRefs);
                        if (message.nodes.length === 0) {
                            message = undefined;
                        }
                        element.i18n = message;
                    }
                    else if (attr.name.startsWith(util_1.I18N_ATTR_PREFIX)) {
                        var name_1 = attr.name.slice(util_1.I18N_ATTR_PREFIX.length);
                        if ((0, trusted_types_sinks_1.isTrustedTypesSink)(element.name, name_1)) {
                            this._reportError(attr, "Translating attribute '".concat(name_1, "' is disallowed for security reasons."));
                        }
                        else {
                            attrsMeta[name_1] = attr.value;
                        }
                    }
                    else {
                        attrs.push(attr);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (Object.keys(attrsMeta).length) {
                try {
                    for (var attrs_1 = __values(attrs), attrs_1_1 = attrs_1.next(); !attrs_1_1.done; attrs_1_1 = attrs_1.next()) {
                        var attr = attrs_1_1.value;
                        var meta = attrsMeta[attr.name];
                        if (meta !== undefined && attr.value) {
                            attr.i18n = this._generateI18nMessage([attr], attr.i18n || meta);
                        }
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (attrs_1_1 && !attrs_1_1.done && (_b = attrs_1.return)) _b.call(attrs_1);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            if (!this.keepI18nAttrs) {
                element.attrs = attrs;
            }
        }
        html.visitAll(this, element.children, message);
        return element;
    };
    I18nMetaVisitor.prototype.visitExpansion = function (expansion, currentMessage) {
        var message;
        var meta = expansion.i18n;
        this.hasI18nMeta = true;
        if (meta instanceof i18n.IcuPlaceholder) {
            var name_2 = meta.name;
            message = this._generateI18nMessage([expansion], meta);
            var icu = (0, util_1.icuFromI18nMessage)(message);
            icu.name = name_2;
            if (currentMessage !== null) {
                currentMessage.placeholderToMessage[name_2] = message;
            }
        }
        else {
            message = this._generateI18nMessage([expansion], currentMessage || meta);
        }
        expansion.i18n = message;
        return expansion;
    };
    I18nMetaVisitor.prototype.visitText = function (text) {
        return text;
    };
    I18nMetaVisitor.prototype.visitAttribute = function (attribute) {
        return attribute;
    };
    I18nMetaVisitor.prototype.visitComment = function (comment) {
        return comment;
    };
    I18nMetaVisitor.prototype.visitExpansionCase = function (expansionCase) {
        return expansionCase;
    };
    I18nMetaVisitor.prototype.visitBlockGroup = function (group, context) {
        html.visitAll(this, group.blocks, context);
        return group;
    };
    I18nMetaVisitor.prototype.visitBlock = function (block, context) {
        html.visitAll(this, block.children, context);
        return block;
    };
    I18nMetaVisitor.prototype.visitBlockParameter = function (parameter, context) {
        return parameter;
    };
    I18nMetaVisitor.prototype._parseMetadata = function (meta) {
        return typeof meta === 'string' ? parseI18nMeta(meta) :
            meta instanceof i18n.Message ? meta :
                {};
    };
    I18nMetaVisitor.prototype._setMessageId = function (message, meta) {
        if (!message.id) {
            message.id = meta instanceof i18n.Message && meta.id || (0, digest_1.decimalDigest)(message);
        }
    };
    I18nMetaVisitor.prototype._setLegacyIds = function (message, meta) {
        if (this.enableI18nLegacyMessageIdFormat) {
            message.legacyIds = [(0, digest_1.computeDigest)(message), (0, digest_1.computeDecimalDigest)(message)];
        }
        else if (typeof meta !== 'string') {
            var previousMessage = meta instanceof i18n.Message ? meta :
                meta instanceof i18n.IcuPlaceholder ? meta.previousMessage :
                    undefined;
            message.legacyIds = previousMessage ? previousMessage.legacyIds : [];
        }
    };
    I18nMetaVisitor.prototype._reportError = function (node, msg) {
        this._errors.push(new parse_util_1.I18nError(node.sourceSpan, msg));
    };
    return I18nMetaVisitor;
}());
exports.I18nMetaVisitor = I18nMetaVisitor;
var I18N_MEANING_SEPARATOR = '|';
var I18N_ID_SEPARATOR = '@@';
function parseI18nMeta(meta) {
    var _a, _b;
    if (meta === void 0) { meta = ''; }
    var customId;
    var meaning;
    var description;
    meta = meta.trim();
    if (meta) {
        var idIndex = meta.indexOf(I18N_ID_SEPARATOR);
        var descIndex = meta.indexOf(I18N_MEANING_SEPARATOR);
        var meaningAndDesc = void 0;
        _a = __read((idIndex > -1) ? [meta.slice(0, idIndex), meta.slice(idIndex + 2)] : [meta, ''], 2), meaningAndDesc = _a[0], customId = _a[1];
        _b = __read((descIndex > -1) ?
            [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :
            ['', meaningAndDesc], 2), meaning = _b[0], description = _b[1];
    }
    return { customId: customId, meaning: meaning, description: description };
}
exports.parseI18nMeta = parseI18nMeta;
function i18nMetaToJSDoc(meta) {
    var tags = [];
    if (meta.description) {
        tags.push({ tagName: "desc", text: meta.description });
    }
    else {
        tags.push({ tagName: "suppress", text: '{msgDescriptions}' });
    }
    if (meta.meaning) {
        tags.push({ tagName: "meaning", text: meta.meaning });
    }
    return o.jsDocComment(tags);
}
exports.i18nMetaToJSDoc = i18nMetaToJSDoc;
