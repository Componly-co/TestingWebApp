"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.phasePropertyOrdering = void 0;
var ir = __importStar(require("../../ir"));
function kindTest(kind) {
    return function (op) { return op.kind === kind; };
}
var ORDERING = [
    { test: kindTest(ir.OpKind.StyleMap), transform: keepLast },
    { test: kindTest(ir.OpKind.ClassMap), transform: keepLast },
    { test: kindTest(ir.OpKind.StyleProp) },
    { test: kindTest(ir.OpKind.ClassProp) },
    {
        test: function (op) {
            return (op.kind === ir.OpKind.Property || op.kind === ir.OpKind.HostProperty) &&
                op.expression instanceof ir.Interpolation;
        }
    },
    {
        test: function (op) {
            return (op.kind === ir.OpKind.Property || op.kind === ir.OpKind.HostProperty) &&
                !(op.expression instanceof ir.Interpolation);
        }
    },
    { test: kindTest(ir.OpKind.Attribute) },
];
var handledOpKinds = new Set([
    ir.OpKind.StyleMap,
    ir.OpKind.ClassMap,
    ir.OpKind.StyleProp,
    ir.OpKind.ClassProp,
    ir.OpKind.Property,
    ir.OpKind.HostProperty,
    ir.OpKind.Attribute,
]);
function phasePropertyOrdering(cpl) {
    var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
    try {
        for (var _e = __values(cpl.units), _f = _e.next(); !_f.done; _f = _e.next()) {
            var unit = _f.value;
            var opsToOrder = [];
            try {
                for (var _g = (e_2 = void 0, __values(unit.update)), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var op = _h.value;
                    if (handledOpKinds.has(op.kind)) {
                        opsToOrder.push(op);
                        ir.OpList.remove(op);
                    }
                    else {
                        try {
                            for (var _j = (e_3 = void 0, __values(reorder(opsToOrder))), _k = _j.next(); !_k.done; _k = _j.next()) {
                                var orderedOp = _k.value;
                                ir.OpList.insertBefore(orderedOp, op);
                            }
                        }
                        catch (e_3_1) { e_3 = { error: e_3_1 }; }
                        finally {
                            try {
                                if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                            }
                            finally { if (e_3) throw e_3.error; }
                        }
                        opsToOrder = [];
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_2) throw e_2.error; }
            }
            try {
                for (var _l = (e_4 = void 0, __values(reorder(opsToOrder))), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var orderedOp = _m.value;
                    unit.update.push(orderedOp);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
exports.phasePropertyOrdering = phasePropertyOrdering;
function reorder(ops) {
    var e_5, _a;
    var groups = Array.from(ORDERING, function () { return new Array(); });
    var _loop_1 = function (op) {
        var groupIndex = ORDERING.findIndex(function (o) { return o.test(op); });
        groups[groupIndex].push(op);
    };
    try {
        for (var ops_1 = __values(ops), ops_1_1 = ops_1.next(); !ops_1_1.done; ops_1_1 = ops_1.next()) {
            var op = ops_1_1.value;
            _loop_1(op);
        }
    }
    catch (e_5_1) { e_5 = { error: e_5_1 }; }
    finally {
        try {
            if (ops_1_1 && !ops_1_1.done && (_a = ops_1.return)) _a.call(ops_1);
        }
        finally { if (e_5) throw e_5.error; }
    }
    return groups.flatMap(function (group, i) {
        var transform = ORDERING[i].transform;
        return transform ? transform(group) : group;
    });
}
function keepLast(ops) {
    return ops.slice(ops.length - 1);
}
