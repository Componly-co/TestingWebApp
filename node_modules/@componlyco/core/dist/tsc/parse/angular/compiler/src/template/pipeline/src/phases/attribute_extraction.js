"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.phaseAttributeExtraction = void 0;
var ir = __importStar(require("../../ir"));
var elements_1 = require("../util/elements");
function phaseAttributeExtraction(cpl) {
    var e_1, _a, e_2, _b;
    try {
        for (var _c = __values(cpl.views), _d = _c.next(); !_d.done; _d = _c.next()) {
            var _e = __read(_d.value, 2), _1 = _e[0], view = _e[1];
            var elements = (0, elements_1.getElementsByXrefId)(view);
            try {
                for (var _f = (e_2 = void 0, __values(view.ops())), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var op = _g.value;
                    switch (op.kind) {
                        case ir.OpKind.Attribute:
                            extractAttributeOp(view, op, elements);
                            break;
                        case ir.OpKind.Property:
                            if (!op.isAnimationTrigger) {
                                ir.OpList.insertBefore(ir.createExtractedAttributeOp(op.target, op.isTemplate ? ir.BindingKind.Template : ir.BindingKind.Property, op.name, null), lookupElement(elements, op.target));
                            }
                            break;
                        case ir.OpKind.StyleProp:
                        case ir.OpKind.ClassProp:
                            if (view.compatibility === ir.CompatibilityMode.TemplateDefinitionBuilder &&
                                op.expression instanceof ir.EmptyExpr) {
                                ir.OpList.insertBefore(ir.createExtractedAttributeOp(op.target, ir.BindingKind.Property, op.name, null), lookupElement(elements, op.target));
                            }
                            break;
                        case ir.OpKind.Listener:
                            if (!op.isAnimationListener) {
                                ir.OpList.insertBefore(ir.createExtractedAttributeOp(op.target, ir.BindingKind.Property, op.name, null), lookupElement(elements, op.target));
                            }
                            break;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
exports.phaseAttributeExtraction = phaseAttributeExtraction;
function lookupElement(elements, xref) {
    var el = elements.get(xref);
    if (el === undefined) {
        throw new Error('All attributes should have an element-like target.');
    }
    return el;
}
function extractAttributeOp(view, op, elements) {
    if (op.expression instanceof ir.Interpolation) {
        return;
    }
    var ownerOp = lookupElement(elements, op.target);
    var extractable = op.expression.isConstant();
    if (view.compatibility === ir.CompatibilityMode.TemplateDefinitionBuilder) {
        extractable = ir.isStringLiteral(op.expression);
        if (op.name === 'style' || op.name === 'class') {
            extractable && (extractable = op.isTextAttribute);
        }
    }
    if (extractable) {
        ir.OpList.insertBefore(ir.createExtractedAttributeOp(op.target, op.isTemplate ? ir.BindingKind.Template : ir.BindingKind.Attribute, op.name, op.expression), ownerOp);
        ir.OpList.remove(op);
    }
}
