"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPipeDefinitionMap = exports.compileDeclarePipeFromMetadata = void 0;
var o = __importStar(require("../../output/output_ast"));
var r3_identifiers_1 = require("../r3_identifiers");
var r3_pipe_compiler_1 = require("../r3_pipe_compiler");
var util_1 = require("../view/util");
var MINIMUM_PARTIAL_LINKER_VERSION = '14.0.0';
function compileDeclarePipeFromMetadata(meta) {
    var definitionMap = createPipeDefinitionMap(meta);
    var expression = o.importExpr(r3_identifiers_1.Identifiers.declarePipe).callFn([definitionMap.toLiteralMap()]);
    var type = (0, r3_pipe_compiler_1.createPipeType)(meta);
    return { expression: expression, type: type, statements: [] };
}
exports.compileDeclarePipeFromMetadata = compileDeclarePipeFromMetadata;
function createPipeDefinitionMap(meta) {
    var definitionMap = new util_1.DefinitionMap();
    definitionMap.set('minVersion', o.literal(MINIMUM_PARTIAL_LINKER_VERSION));
    definitionMap.set('version', o.literal('0.0.0-PLACEHOLDER'));
    definitionMap.set('ngImport', o.importExpr(r3_identifiers_1.Identifiers.core));
    definitionMap.set('type', meta.type.value);
    if (meta.isStandalone) {
        definitionMap.set('isStandalone', o.literal(meta.isStandalone));
    }
    definitionMap.set('name', o.literal(meta.pipeName));
    if (meta.pure === false) {
        definitionMap.set('pure', o.literal(meta.pure));
    }
    return definitionMap;
}
exports.createPipeDefinitionMap = createPipeDefinitionMap;
