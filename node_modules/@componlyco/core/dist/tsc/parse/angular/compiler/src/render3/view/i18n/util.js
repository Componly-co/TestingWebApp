"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.declareI18nVariable = exports.getTranslationConstPrefix = exports.formatI18nPlaceholderName = exports.formatI18nPlaceholderNamesInMap = exports.assembleBoundTextPlaceholders = exports.updatePlaceholderMap = exports.placeholdersToParams = exports.getSeqNumberGenerator = exports.assembleI18nBoundString = exports.wrapI18nPlaceholder = exports.icuFromI18nMessage = exports.hasI18nAttrs = exports.hasI18nMeta = exports.isSingleI18nIcu = exports.isI18nRootNode = exports.isI18nAttribute = exports.I18N_PLACEHOLDER_SYMBOL = exports.I18N_ICU_MAPPING_PREFIX = exports.I18N_ICU_VAR_PREFIX = exports.I18N_ATTR_PREFIX = exports.I18N_ATTR = exports.TRANSLATION_VAR_PREFIX = void 0;
var i18n = __importStar(require("../../../i18n/i18n_ast"));
var xmb_1 = require("../../../i18n/serializers/xmb");
var o = __importStar(require("../../../output/output_ast"));
var CLOSURE_TRANSLATION_VAR_PREFIX = 'MSG_';
exports.TRANSLATION_VAR_PREFIX = 'i18n_';
exports.I18N_ATTR = 'i18n';
exports.I18N_ATTR_PREFIX = 'i18n-';
exports.I18N_ICU_VAR_PREFIX = 'VAR_';
exports.I18N_ICU_MAPPING_PREFIX = 'I18N_EXP_';
exports.I18N_PLACEHOLDER_SYMBOL = 'ï¿½';
function isI18nAttribute(name) {
    return name === exports.I18N_ATTR || name.startsWith(exports.I18N_ATTR_PREFIX);
}
exports.isI18nAttribute = isI18nAttribute;
function isI18nRootNode(meta) {
    return meta instanceof i18n.Message;
}
exports.isI18nRootNode = isI18nRootNode;
function isSingleI18nIcu(meta) {
    return isI18nRootNode(meta) && meta.nodes.length === 1 && meta.nodes[0] instanceof i18n.Icu;
}
exports.isSingleI18nIcu = isSingleI18nIcu;
function hasI18nMeta(node) {
    return !!node.i18n;
}
exports.hasI18nMeta = hasI18nMeta;
function hasI18nAttrs(element) {
    return element.attrs.some(function (attr) { return isI18nAttribute(attr.name); });
}
exports.hasI18nAttrs = hasI18nAttrs;
function icuFromI18nMessage(message) {
    return message.nodes[0];
}
exports.icuFromI18nMessage = icuFromI18nMessage;
function wrapI18nPlaceholder(content, contextId) {
    if (contextId === void 0) { contextId = 0; }
    var blockId = contextId > 0 ? ":".concat(contextId) : '';
    return "".concat(exports.I18N_PLACEHOLDER_SYMBOL).concat(content).concat(blockId).concat(exports.I18N_PLACEHOLDER_SYMBOL);
}
exports.wrapI18nPlaceholder = wrapI18nPlaceholder;
function assembleI18nBoundString(strings, bindingStartIndex, contextId) {
    if (bindingStartIndex === void 0) { bindingStartIndex = 0; }
    if (contextId === void 0) { contextId = 0; }
    if (!strings.length)
        return '';
    var acc = '';
    var lastIdx = strings.length - 1;
    for (var i = 0; i < lastIdx; i++) {
        acc += "".concat(strings[i]).concat(wrapI18nPlaceholder(bindingStartIndex + i, contextId));
    }
    acc += strings[lastIdx];
    return acc;
}
exports.assembleI18nBoundString = assembleI18nBoundString;
function getSeqNumberGenerator(startsAt) {
    if (startsAt === void 0) { startsAt = 0; }
    var current = startsAt;
    return function () { return current++; };
}
exports.getSeqNumberGenerator = getSeqNumberGenerator;
function placeholdersToParams(placeholders) {
    var params = {};
    placeholders.forEach(function (values, key) {
        params[key] = o.literal(values.length > 1 ? "[".concat(values.join('|'), "]") : values[0]);
    });
    return params;
}
exports.placeholdersToParams = placeholdersToParams;
function updatePlaceholderMap(map, name) {
    var values = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        values[_i - 2] = arguments[_i];
    }
    var current = map.get(name) || [];
    current.push.apply(current, __spreadArray([], __read(values), false));
    map.set(name, current);
}
exports.updatePlaceholderMap = updatePlaceholderMap;
function assembleBoundTextPlaceholders(meta, bindingStartIndex, contextId) {
    if (bindingStartIndex === void 0) { bindingStartIndex = 0; }
    if (contextId === void 0) { contextId = 0; }
    var startIdx = bindingStartIndex;
    var placeholders = new Map();
    var node = meta instanceof i18n.Message ? meta.nodes.find(function (node) { return node instanceof i18n.Container; }) : meta;
    if (node) {
        node
            .children
            .filter(function (child) { return child instanceof i18n.Placeholder; })
            .forEach(function (child, idx) {
            var content = wrapI18nPlaceholder(startIdx + idx, contextId);
            updatePlaceholderMap(placeholders, child.name, content);
        });
    }
    return placeholders;
}
exports.assembleBoundTextPlaceholders = assembleBoundTextPlaceholders;
function formatI18nPlaceholderNamesInMap(params, useCamelCase) {
    if (params === void 0) { params = {}; }
    var _params = {};
    if (params && Object.keys(params).length) {
        Object.keys(params).forEach(function (key) { return _params[formatI18nPlaceholderName(key, useCamelCase)] = params[key]; });
    }
    return _params;
}
exports.formatI18nPlaceholderNamesInMap = formatI18nPlaceholderNamesInMap;
function formatI18nPlaceholderName(name, useCamelCase) {
    if (useCamelCase === void 0) { useCamelCase = true; }
    var publicName = (0, xmb_1.toPublicName)(name);
    if (!useCamelCase) {
        return publicName;
    }
    var chunks = publicName.split('_');
    if (chunks.length === 1) {
        return name.toLowerCase();
    }
    var postfix;
    if (/^\d+$/.test(chunks[chunks.length - 1])) {
        postfix = chunks.pop();
    }
    var raw = chunks.shift().toLowerCase();
    if (chunks.length) {
        raw += chunks.map(function (c) { return c.charAt(0).toUpperCase() + c.slice(1).toLowerCase(); }).join('');
    }
    return postfix ? "".concat(raw, "_").concat(postfix) : raw;
}
exports.formatI18nPlaceholderName = formatI18nPlaceholderName;
function getTranslationConstPrefix(extra) {
    return "".concat(CLOSURE_TRANSLATION_VAR_PREFIX).concat(extra).toUpperCase();
}
exports.getTranslationConstPrefix = getTranslationConstPrefix;
function declareI18nVariable(variable) {
    return new o.DeclareVarStmt(variable.name, undefined, o.INFERRED_TYPE, undefined, variable.sourceSpan);
}
exports.declareI18nVariable = declareI18nVariable;
