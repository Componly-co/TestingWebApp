"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.phaseParseExtractedStyles = void 0;
var o = __importStar(require("../../../../output/output_ast"));
var style_parser_1 = require("../../../../render3/view/style_parser");
var ir = __importStar(require("../../ir"));
function phaseParseExtractedStyles(cpl) {
    var e_1, _a, e_2, _b, e_3, _c;
    try {
        for (var _d = __values(cpl.views), _e = _d.next(); !_e.done; _e = _d.next()) {
            var _f = __read(_e.value, 2), _1 = _f[0], view = _f[1];
            try {
                for (var _g = (e_2 = void 0, __values(view.create)), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var op = _h.value;
                    if (op.kind === ir.OpKind.ExtractedAttribute && op.bindingKind === ir.BindingKind.Attribute &&
                        ir.isStringLiteral(op.expression)) {
                        if (op.name === 'style') {
                            var parsedStyles = (0, style_parser_1.parse)(op.expression.value);
                            for (var i = 0; i < parsedStyles.length - 1; i += 2) {
                                ir.OpList.insertBefore(ir.createExtractedAttributeOp(op.target, ir.BindingKind.StyleProperty, parsedStyles[i], o.literal(parsedStyles[i + 1])), op);
                            }
                            ir.OpList.remove(op);
                        }
                        else if (op.name === 'class') {
                            var parsedClasses = op.expression.value.trim().split(/\s+/g);
                            try {
                                for (var parsedClasses_1 = (e_3 = void 0, __values(parsedClasses)), parsedClasses_1_1 = parsedClasses_1.next(); !parsedClasses_1_1.done; parsedClasses_1_1 = parsedClasses_1.next()) {
                                    var parsedClass = parsedClasses_1_1.value;
                                    ir.OpList.insertBefore(ir.createExtractedAttributeOp(op.target, ir.BindingKind.ClassName, parsedClass, null), op);
                                }
                            }
                            catch (e_3_1) { e_3 = { error: e_3_1 }; }
                            finally {
                                try {
                                    if (parsedClasses_1_1 && !parsedClasses_1_1.done && (_c = parsedClasses_1.return)) _c.call(parsedClasses_1);
                                }
                                finally { if (e_3) throw e_3.error; }
                            }
                            ir.OpList.remove(op);
                        }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
exports.phaseParseExtractedStyles = phaseParseExtractedStyles;
