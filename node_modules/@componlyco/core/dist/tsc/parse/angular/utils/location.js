"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getHtmlAttributes = exports.getFileWiseLocations = void 0;
var utils_1 = require("../../../utils");
var utils_2 = require("../utils");
function getFileWiseLocations(_a) {
    var parsedTemplates = _a.parsedTemplates, selector = _a.selector, projectPath = _a.projectPath;
    return __awaiter(this, void 0, void 0, function () {
        var locations, filewiseLocations;
        return __generator(this, function (_b) {
            locations = parsedTemplates.map(function (parsedTemplate) {
                if (parsedTemplate && parsedTemplate.ast) {
                    var nodes = (0, utils_2.flattenItemsWithChildren)(parsedTemplate.ast.nodes);
                    if (selector.includes('[') && selector.includes(']')) {
                        var element_1 = selector.split('[')[0];
                        var attr_1 = selector.split('[')[1].split(']')[0];
                        return nodes
                            .filter(function (node) { return node.name === element_1; })
                            .filter(function (node) { return node.attributes.map(function (a) { return a.name; }).includes(attr_1); })
                            .map(function (node) {
                            return {
                                lineNumber: node.sourceSpan.start.line,
                                columnNumber: node.sourceSpan.start.col,
                                htmlFilePath: (0, utils_1.getRelativePath)(projectPath, parsedTemplate.htmlFilePath),
                                fileName: parsedTemplate.fileName
                            };
                        });
                    }
                    else {
                        return nodes.filter(function (node) { return node.name === selector; }).map(function (node) {
                            return {
                                lineNumber: node.sourceSpan.start.line,
                                columnNumber: node.sourceSpan.start.col,
                                htmlFilePath: (0, utils_1.getRelativePath)(projectPath, parsedTemplate.htmlFilePath),
                                fileName: parsedTemplate.fileName
                            };
                        });
                    }
                }
                return [];
            }).flat();
            filewiseLocations = {};
            locations.filter(function (loc) { return loc && loc.htmlFilePath && loc.fileName && loc.columnNumber && loc.lineNumber; })
                .forEach(function (loc) {
                if (!filewiseLocations[loc.htmlFilePath]) {
                    filewiseLocations[loc.htmlFilePath] = [];
                }
                filewiseLocations[loc.htmlFilePath].push({
                    lineNumber: loc.lineNumber,
                    columnNumber: loc.columnNumber
                });
            });
            return [2, filewiseLocations];
        });
    });
}
exports.getFileWiseLocations = getFileWiseLocations;
function getHtmlAttributes(_a) {
    var parsedTemplates = _a.parsedTemplates, templateUrl = _a.templateUrl;
    var parsedTemplate = parsedTemplates
        .find(function (template) { return template.htmlFilePath === templateUrl; });
    if (parsedTemplate && parsedTemplate.ast) {
        var nodes = (0, utils_2.flattenItemsWithChildren)(parsedTemplate.ast.nodes);
        return nodes.map(function (node) {
            return {
                name: node.name,
                attributes: node.attributes ? node.attributes.map(function (a) { return a.name; }) : []
            };
        });
    }
    return [];
}
exports.getHtmlAttributes = getHtmlAttributes;
