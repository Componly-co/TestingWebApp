import { ConstantPool } from '../../../constant_pool';
import * as e from '../../../expression_parser/ast';
import * as t from '../../../render3/r3_ast';
import { BindingParser } from '../../../template_parser/binding_parser';
import { ComponentCompilationJob, HostBindingCompilationJob } from './compilation';
export declare function ingestComponent(componentName: string, template: t.Node[], constantPool: ConstantPool): ComponentCompilationJob;
export interface HostBindingInput {
    componentName: string;
    properties: e.ParsedProperty[] | null;
    events: e.ParsedEvent[] | null;
}
export declare function ingestHostBinding(input: HostBindingInput, bindingParser: BindingParser, constantPool: ConstantPool): HostBindingCompilationJob;
export declare function ingestHostProperty(job: HostBindingCompilationJob, property: e.ParsedProperty, isTextAttribute: boolean): void;
export declare function ingestHostEvent(job: HostBindingCompilationJob, event: e.ParsedEvent): void;
//# sourceMappingURL=ingest.d.ts.map