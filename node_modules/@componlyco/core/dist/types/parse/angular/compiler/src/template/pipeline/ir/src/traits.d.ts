import type { ParseSourceSpan } from '../../../../parse_util';
import type { Op, XrefId } from './operations';
import type { Expression } from './expression';
export declare const ConsumesSlot: unique symbol;
export declare const DependsOnSlotContext: unique symbol;
export declare const UsesSlotIndex: unique symbol;
export declare const ConsumesVarsTrait: unique symbol;
export declare const UsesVarOffset: unique symbol;
export interface ConsumesSlotOpTrait {
    readonly [ConsumesSlot]: true;
    slot: number | null;
    numSlotsUsed: number;
    xref: XrefId;
}
export interface DependsOnSlotContextOpTrait {
    readonly [DependsOnSlotContext]: true;
    target: XrefId;
    sourceSpan: ParseSourceSpan;
}
export interface UsesSlotIndexTrait {
    readonly [UsesSlotIndex]: true;
    target: XrefId;
    slot: number | null;
}
export interface ConsumesVarsTrait {
    [ConsumesVarsTrait]: true;
}
export interface UsesVarOffsetTrait {
    [UsesVarOffset]: true;
    varOffset: number | null;
}
export declare const TRAIT_CONSUMES_SLOT: Omit<ConsumesSlotOpTrait, 'xref'>;
export declare const TRAIT_USES_SLOT_INDEX: Omit<UsesSlotIndexTrait, 'target'>;
export declare const TRAIT_DEPENDS_ON_SLOT_CONTEXT: Omit<DependsOnSlotContextOpTrait, 'target' | 'sourceSpan'>;
export declare const TRAIT_CONSUMES_VARS: ConsumesVarsTrait;
export declare const TRAIT_USES_VAR_OFFSET: UsesVarOffsetTrait;
export declare function hasConsumesSlotTrait<OpT extends Op<OpT>>(op: OpT): op is OpT & ConsumesSlotOpTrait;
export declare function hasDependsOnSlotContextTrait<OpT extends Op<OpT>>(op: OpT): op is OpT & DependsOnSlotContextOpTrait;
export declare function hasConsumesVarsTrait<ExprT extends Expression>(expr: ExprT): expr is ExprT & ConsumesVarsTrait;
export declare function hasConsumesVarsTrait<OpT extends Op<OpT>>(op: OpT): op is OpT & ConsumesVarsTrait;
export declare function hasUsesVarOffsetTrait<ExprT extends Expression>(expr: ExprT): expr is ExprT & UsesVarOffsetTrait;
export declare function hasUsesSlotIndexTrait<ExprT extends Expression>(expr: ExprT): expr is ExprT & UsesSlotIndexTrait;
export declare function hasUsesSlotIndexTrait<OpT extends Op<OpT>>(op: OpT): op is OpT & UsesSlotIndexTrait;
//# sourceMappingURL=traits.d.ts.map