import { ConstantPool } from '../../constant_pool';
import * as o from '../../output/output_ast';
import { ParseError, ParseSourceSpan } from '../../parse_util';
import { BindingParser } from '../../template_parser/binding_parser';
import { R3CompiledExpression } from '../util';
import { R3ComponentMetadata, R3DirectiveMetadata, R3TemplateDependency } from './api';
export declare function compileDirectiveFromMetadata(meta: R3DirectiveMetadata, constantPool: ConstantPool, bindingParser: BindingParser): R3CompiledExpression;
export declare function compileComponentFromMetadata(meta: R3ComponentMetadata<R3TemplateDependency>, constantPool: ConstantPool, bindingParser: BindingParser): R3CompiledExpression;
export declare function createComponentType(meta: R3ComponentMetadata<R3TemplateDependency>): o.Type;
export declare const enum QueryFlags {
    none = 0,
    descendants = 1,
    isStatic = 2,
    emitDistinctChangesOnly = 4
}
export declare function createDirectiveType(meta: R3DirectiveMetadata): o.Type;
export interface ParsedHostBindings {
    attributes: {
        [key: string]: o.Expression;
    };
    listeners: {
        [key: string]: string;
    };
    properties: {
        [key: string]: string;
    };
    specialAttributes: {
        styleAttr?: string;
        classAttr?: string;
    };
}
export declare function parseHostBindings(host: {
    [key: string]: string | o.Expression;
}): ParsedHostBindings;
export declare function verifyHostBindings(bindings: ParsedHostBindings, sourceSpan: ParseSourceSpan): ParseError[];
export declare function createHostDirectivesMappingArray(mapping: Record<string, string>): o.LiteralArrayExpr | null;
//# sourceMappingURL=compiler.d.ts.map