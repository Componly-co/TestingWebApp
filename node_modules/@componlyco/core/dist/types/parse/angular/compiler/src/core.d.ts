export declare const emitDistinctChangesOnlyDefaultValue = true;
export declare enum ViewEncapsulation {
    Emulated = 0,
    None = 2,
    ShadowDom = 3
}
export declare enum ChangeDetectionStrategy {
    OnPush = 0,
    Default = 1
}
export interface Input {
    alias?: string;
    required?: boolean;
    transform?: (value: any) => any;
}
export interface Output {
    alias?: string;
}
export interface HostBinding {
    hostPropertyName?: string;
}
export interface HostListener {
    eventName?: string;
    args?: string[];
}
export interface SchemaMetadata {
    name: string;
}
export declare const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata;
export declare const NO_ERRORS_SCHEMA: SchemaMetadata;
export interface Type extends Function {
    new (...args: any[]): any;
}
export declare const Type: FunctionConstructor;
export declare enum SecurityContext {
    NONE = 0,
    HTML = 1,
    STYLE = 2,
    SCRIPT = 3,
    URL = 4,
    RESOURCE_URL = 5
}
export declare const enum InjectFlags {
    Default = 0,
    Host = 1,
    Self = 2,
    SkipSelf = 4,
    Optional = 8,
    ForPipe = 16
}
export declare enum MissingTranslationStrategy {
    Error = 0,
    Warning = 1,
    Ignore = 2
}
export declare const enum SelectorFlags {
    NOT = 1,
    ATTRIBUTE = 2,
    ELEMENT = 4,
    CLASS = 8
}
export type R3CssSelector = (string | SelectorFlags)[];
export type R3CssSelectorList = R3CssSelector[];
export declare function parseSelectorToR3Selector(selector: string | null): R3CssSelectorList;
export declare const enum RenderFlags {
    Create = 1,
    Update = 2
}
export declare const enum AttributeMarker {
    NamespaceURI = 0,
    Classes = 1,
    Styles = 2,
    Bindings = 3,
    Template = 4,
    ProjectAs = 5,
    I18n = 6
}
//# sourceMappingURL=core.d.ts.map