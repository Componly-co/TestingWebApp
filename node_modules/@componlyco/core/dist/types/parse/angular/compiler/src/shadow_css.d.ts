export declare class ShadowCss {
    shimCssText(cssText: string, selector: string, hostSelector?: string): string;
    private _insertDirectives;
    private _scopeKeyframesRelatedCss;
    private _scopeLocalKeyframeDeclarations;
    private _scopeAnimationKeyframe;
    private _animationDeclarationKeyframesRe;
    private _scopeAnimationRule;
    private _insertPolyfillDirectivesInCssText;
    private _insertPolyfillRulesInCssText;
    private _scopeCssText;
    private _extractUnscopedRulesFromCssText;
    private _convertColonHost;
    private _convertColonHostContext;
    private _convertShadowDOMSelectors;
    private _scopeSelectors;
    private _stripScopingSelectors;
    private _scopeSelector;
    private _selectorNeedsScoping;
    private _makeScopeMatcher;
    private _applySimpleSelectorScope;
    private _applySelectorScope;
    private _insertPolyfillHostInCssText;
}
export declare class CssRule {
    selector: string;
    content: string;
    constructor(selector: string, content: string);
}
export declare function processRules(input: string, ruleCallback: (rule: CssRule) => CssRule): string;
export declare function repeatGroups(groups: string[][], multiples: number): void;
//# sourceMappingURL=shadow_css.d.ts.map