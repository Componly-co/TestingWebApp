import * as html from '../ml_parser/ast';
import { ParseError } from '../parse_util';
import { BindingParser } from '../template_parser/binding_parser';
import * as t from './r3_ast';
export declare function parseWhenTrigger({ expression, sourceSpan }: html.BlockParameter, bindingParser: BindingParser, triggers: t.DeferredBlockTriggers, errors: ParseError[]): void;
export declare function parseOnTrigger({ expression, sourceSpan }: html.BlockParameter, triggers: t.DeferredBlockTriggers, errors: ParseError[]): void;
export declare function getTriggerParametersStart(value: string, startPosition?: number): number;
export declare function parseDeferredTime(value: string): number | null;
//# sourceMappingURL=r3_deferred_triggers.d.ts.map