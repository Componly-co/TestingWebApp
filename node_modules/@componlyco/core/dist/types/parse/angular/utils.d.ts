import { ObjectLiteralExpression, ArrayLiteralExpression } from 'ts-morph';
import { TmplAstNode } from './compiler';
import { ComponentInfo, ComponentStatistics } from "@componlyco/schemas";
interface AstNode extends TmplAstNode {
    children: AstNode[];
}
export declare function findClosestPackageJson(filePath: string): string | null;
export declare function extractFromObject(node: ObjectLiteralExpression, property: string): any;
export declare function extractFromArray(node: ArrayLiteralExpression, property: string): any;
export declare function flattenItemsWithChildren(items: AstNode[]): TmplAstNode[];
export declare function getComponentStatistics(components: ComponentInfo[]): ComponentStatistics;
export declare function saveToJSON<T = unknown>(outputPath: string, content: T): Promise<void>;
export declare function addOverriddenComponents(importedComponents: ComponentInfo[], selfDeclaredComponents: ComponentInfo[]): ComponentInfo[];
export {};
//# sourceMappingURL=utils.d.ts.map