import { ComponentInfo } from "@componlyco/schemas";
export type CONFIG = 'componly.config.json' | 'tsconfig.json' | 'jsconfig.json' | 'package.json';
export declare function readJsConfig(filePath?: CONFIG): Promise<any>;
export declare function resolveImportPath(importPath: string, config: any): string;
export declare function isAlias(importPath: string, config: any): boolean;
export declare function isPathAlias(importPath: string, config: any): string | false;
export declare function getAliases(importedReactComponents: ComponentInfo[]): Promise<{
    description?: string | null | undefined;
    path?: string | null | undefined;
    line?: number | null | undefined;
    column?: number | null | undefined;
    library?: {
        name?: string | null | undefined;
        version?: string | null | undefined;
    } | null | undefined;
    designDocs?: string[] | null | undefined;
    overriddenComponents?: Record<string, number> | null | undefined;
    stories?: string[] | null | undefined;
    overriddenBy?: Record<string, number> | null | undefined;
    storyURLs?: string[] | null | undefined;
    filewiseLocation?: Record<string, {
        lineNumber: number;
        columnNumber: number;
    }[]> | null | undefined;
    isWebComponent?: boolean | null | undefined;
    props?: Record<string, {
        line: number;
        column: number;
        filePath: string;
    }[]> | null | undefined;
    name: string;
    id: string;
    tags: string[];
    filewiseOccurences: Record<string, number>;
    designSystems: {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }[];
    isSelfDeclared: boolean;
    totalOccurences: number;
}[]>;
//# sourceMappingURL=utils.d.ts.map