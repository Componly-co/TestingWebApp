import { SourceFile } from "ts-morph";
import { ComponentInfo, DesignSystem } from "@componlyco/schemas";
export declare function getNodeModuleWebComponents({ sourceFiles, designSystems }: {
    sourceFiles: SourceFile[];
    designSystems: DesignSystem[];
}): Promise<({
    description?: string | null | undefined;
    path?: string | null | undefined;
    line?: number | null | undefined;
    column?: number | null | undefined;
    library?: {
        name?: string | null | undefined;
        version?: string | null | undefined;
    } | null | undefined;
    designDocs?: string[] | null | undefined;
    overriddenComponents?: Record<string, number> | null | undefined;
    stories?: string[] | null | undefined;
    overriddenBy?: Record<string, number> | null | undefined;
    storyURLs?: string[] | null | undefined;
    filewiseLocation?: Record<string, {
        lineNumber: number;
        columnNumber: number;
    }[]> | null | undefined;
    isWebComponent?: boolean | null | undefined;
    props?: Record<string, {
        line: number;
        column: number;
        filePath: string;
    }[]> | null | undefined;
    name: string;
    id: string;
    tags: string[];
    filewiseOccurences: Record<string, number>;
    designSystems: {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }[];
    isSelfDeclared: boolean;
    totalOccurences: number;
} & {
    selector: string;
})[][]>;
export declare function getJsxElements({ sourceFiles, webComponents, projectPath }: {
    sourceFiles: SourceFile[];
    webComponents: (ComponentInfo & {
        selector: string;
    })[];
    projectPath: string;
}): {
    description?: string | null | undefined;
    path?: string | null | undefined;
    line?: number | null | undefined;
    column?: number | null | undefined;
    library?: {
        name?: string | null | undefined;
        version?: string | null | undefined;
    } | null | undefined;
    designDocs?: string[] | null | undefined;
    overriddenComponents?: Record<string, number> | null | undefined;
    stories?: string[] | null | undefined;
    overriddenBy?: Record<string, number> | null | undefined;
    storyURLs?: string[] | null | undefined;
    filewiseLocation?: Record<string, {
        lineNumber: number;
        columnNumber: number;
    }[]> | null | undefined;
    isWebComponent?: boolean | null | undefined;
    props?: Record<string, {
        line: number;
        column: number;
        filePath: string;
    }[]> | null | undefined;
    name: string;
    id: string;
    tags: string[];
    filewiseOccurences: Record<string, number>;
    designSystems: {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }[];
    isSelfDeclared: boolean;
    totalOccurences: number;
}[];
export declare function findThirdPartyComponentDesignSystems(input: string, designSystems: DesignSystem[]): DesignSystem[];
export declare function getCdnImports(sourceFiles: SourceFile[]): void;
//# sourceMappingURL=web-components.d.ts.map