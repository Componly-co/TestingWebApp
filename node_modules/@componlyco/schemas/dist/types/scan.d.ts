import { z as zod } from "zod";
export declare const ScanSchema: zod.ZodObject<{
    designSystems: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
        url: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
        relativePaths: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
        alias: zod.ZodString;
        tags: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodObject<{
            name: zod.ZodString;
            description: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
        }, "strip", zod.ZodTypeAny, {
            description?: string | null | undefined;
            name: string;
        }, {
            description?: string | null | undefined;
            name: string;
        }>, "many">>>;
    }, "strip", zod.ZodTypeAny, {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }, {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }>, "many">>>;
    storybook: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    project: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    ignorePatterns: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
    projectType: zod.ZodOptional<zod.ZodNullable<zod.ZodNativeEnum<{
        readonly React: "react";
        readonly Stencil: "stencil";
        readonly Angular: "angular";
        readonly Vue: "vue";
    }>>>;
    designTokenGlobs: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
    output: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    url: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    storybookBuild: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    clientName: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    staticDomain: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    projectID: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    codebaseID: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    cliId: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    cliPassword: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    extract: zod.ZodDefault<zod.ZodBoolean>;
}, "strip", zod.ZodTypeAny, {
    url?: string | null | undefined;
    designSystems?: {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }[] | null | undefined;
    storybook?: string | null | undefined;
    project?: string | null | undefined;
    ignorePatterns?: string[] | null | undefined;
    projectType?: "react" | "stencil" | "angular" | "vue" | null | undefined;
    designTokenGlobs?: string[] | null | undefined;
    output?: string | null | undefined;
    storybookBuild?: string | null | undefined;
    clientName?: string | null | undefined;
    staticDomain?: string | null | undefined;
    projectID?: string | null | undefined;
    codebaseID?: string | null | undefined;
    cliId?: string | null | undefined;
    cliPassword?: string | null | undefined;
    extract: boolean;
}, {
    url?: string | null | undefined;
    designSystems?: {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }[] | null | undefined;
    storybook?: string | null | undefined;
    project?: string | null | undefined;
    ignorePatterns?: string[] | null | undefined;
    projectType?: "react" | "stencil" | "angular" | "vue" | null | undefined;
    designTokenGlobs?: string[] | null | undefined;
    output?: string | null | undefined;
    storybookBuild?: string | null | undefined;
    clientName?: string | null | undefined;
    staticDomain?: string | null | undefined;
    projectID?: string | null | undefined;
    codebaseID?: string | null | undefined;
    cliId?: string | null | undefined;
    cliPassword?: string | null | undefined;
    extract?: boolean | undefined;
}>;
export type ScanParams = zod.infer<typeof ScanSchema>;
export declare const ScannerOutputSchema: zod.ZodObject<{
    timestamp: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    projectID: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    codebaseID: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
    userID: zod.ZodOptional<zod.ZodNullable<zod.ZodUnion<[zod.ZodNumber, zod.ZodString]>>>;
    detect: zod.ZodObject<{
        storybookMeta: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
            storybookVersion: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
            storybookVersionSpecifier: zod.ZodString;
            generatedAt: zod.ZodOptional<zod.ZodNullable<zod.ZodNumber>>;
            builder: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
            renderer: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
            hasStorybookEslint: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
            hasStaticDirs: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
            hasCustomWebpack: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
            hasCustomBabel: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
            refCount: zod.ZodOptional<zod.ZodNullable<zod.ZodNumber>>;
            language: zod.ZodUnion<[zod.ZodLiteral<"typescript">, zod.ZodLiteral<"javascript">]>;
            metaFramework: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
                name: zod.ZodString;
                packageName: zod.ZodString;
                version: zod.ZodString;
            }, "strip", zod.ZodTypeAny, {
                name: string;
                version: string;
                packageName: string;
            }, {
                name: string;
                version: string;
                packageName: string;
            }>>>;
            framework: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
                name: zod.ZodString;
                options: zod.ZodOptional<zod.ZodNullable<zod.ZodUnknown>>;
            }, "strip", zod.ZodTypeAny, {
                options?: unknown;
                name: string;
            }, {
                options?: unknown;
                name: string;
            }>>>;
            monorepo: zod.ZodOptional<zod.ZodNullable<zod.ZodUnion<[zod.ZodLiteral<"Nx">, zod.ZodLiteral<"Turborepo">, zod.ZodLiteral<"Lerna">, zod.ZodLiteral<"Rush">, zod.ZodLiteral<"Lage">, zod.ZodLiteral<"Workspaces">]>>>;
            packageManager: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
                type: zod.ZodUnion<[zod.ZodLiteral<"npm">, zod.ZodLiteral<"yarn">, zod.ZodLiteral<"pnpm">]>;
                version: zod.ZodString;
            }, "strip", zod.ZodTypeAny, {
                type: "npm" | "yarn" | "pnpm";
                version: string;
            }, {
                type: "npm" | "yarn" | "pnpm";
                version: string;
            }>>>;
            typescriptOptions: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
                check: zod.ZodOptional<zod.ZodBoolean>;
                skipBabel: zod.ZodOptional<zod.ZodBoolean>;
            }, "strip", zod.ZodTypeAny, {
                check?: boolean | undefined;
                skipBabel?: boolean | undefined;
            }, {
                check?: boolean | undefined;
                skipBabel?: boolean | undefined;
            }>>>;
            addons: zod.ZodOptional<zod.ZodNullable<zod.ZodRecord<zod.ZodString, zod.ZodObject<{
                version: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                versionSpecifier: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                options: zod.ZodUnknown;
            }, "strip", zod.ZodTypeAny, {
                options?: unknown;
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }, {
                options?: unknown;
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }>>>>;
            storybookPackages: zod.ZodOptional<zod.ZodNullable<zod.ZodRecord<zod.ZodString, zod.ZodObject<{
                version: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                versionSpecifier: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
            }, "strip", zod.ZodTypeAny, {
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }, {
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }>>>>;
            features: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
                buildStoriesJson: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
                storyStoreV7: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
                storyStoreV7MdxErrors: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
                argTypeTargetsV7: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
                warnOnLegacyHierarchySeparator: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
                legacyMdx1: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
                legacyDecoratorFileOrder: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
            }, "strip", zod.ZodTypeAny, {
                buildStoriesJson?: boolean | null | undefined;
                storyStoreV7?: boolean | null | undefined;
                storyStoreV7MdxErrors?: boolean | null | undefined;
                argTypeTargetsV7?: boolean | null | undefined;
                warnOnLegacyHierarchySeparator?: boolean | null | undefined;
                legacyMdx1?: boolean | null | undefined;
                legacyDecoratorFileOrder?: boolean | null | undefined;
            }, {
                buildStoriesJson?: boolean | null | undefined;
                storyStoreV7?: boolean | null | undefined;
                storyStoreV7MdxErrors?: boolean | null | undefined;
                argTypeTargetsV7?: boolean | null | undefined;
                warnOnLegacyHierarchySeparator?: boolean | null | undefined;
                legacyMdx1?: boolean | null | undefined;
                legacyDecoratorFileOrder?: boolean | null | undefined;
            }>>>;
        }, "strip", zod.ZodTypeAny, {
            storybookVersion?: string | null | undefined;
            generatedAt?: number | null | undefined;
            builder?: string | null | undefined;
            renderer?: string | null | undefined;
            hasStorybookEslint?: boolean | null | undefined;
            hasStaticDirs?: boolean | null | undefined;
            hasCustomWebpack?: boolean | null | undefined;
            hasCustomBabel?: boolean | null | undefined;
            refCount?: number | null | undefined;
            metaFramework?: {
                name: string;
                version: string;
                packageName: string;
            } | null | undefined;
            framework?: {
                options?: unknown;
                name: string;
            } | null | undefined;
            monorepo?: "Nx" | "Turborepo" | "Lerna" | "Rush" | "Lage" | "Workspaces" | null | undefined;
            packageManager?: {
                type: "npm" | "yarn" | "pnpm";
                version: string;
            } | null | undefined;
            typescriptOptions?: {
                check?: boolean | undefined;
                skipBabel?: boolean | undefined;
            } | null | undefined;
            addons?: Record<string, {
                options?: unknown;
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            storybookPackages?: Record<string, {
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            features?: {
                buildStoriesJson?: boolean | null | undefined;
                storyStoreV7?: boolean | null | undefined;
                storyStoreV7MdxErrors?: boolean | null | undefined;
                argTypeTargetsV7?: boolean | null | undefined;
                warnOnLegacyHierarchySeparator?: boolean | null | undefined;
                legacyMdx1?: boolean | null | undefined;
                legacyDecoratorFileOrder?: boolean | null | undefined;
            } | null | undefined;
            storybookVersionSpecifier: string;
            language: "typescript" | "javascript";
        }, {
            storybookVersion?: string | null | undefined;
            generatedAt?: number | null | undefined;
            builder?: string | null | undefined;
            renderer?: string | null | undefined;
            hasStorybookEslint?: boolean | null | undefined;
            hasStaticDirs?: boolean | null | undefined;
            hasCustomWebpack?: boolean | null | undefined;
            hasCustomBabel?: boolean | null | undefined;
            refCount?: number | null | undefined;
            metaFramework?: {
                name: string;
                version: string;
                packageName: string;
            } | null | undefined;
            framework?: {
                options?: unknown;
                name: string;
            } | null | undefined;
            monorepo?: "Nx" | "Turborepo" | "Lerna" | "Rush" | "Lage" | "Workspaces" | null | undefined;
            packageManager?: {
                type: "npm" | "yarn" | "pnpm";
                version: string;
            } | null | undefined;
            typescriptOptions?: {
                check?: boolean | undefined;
                skipBabel?: boolean | undefined;
            } | null | undefined;
            addons?: Record<string, {
                options?: unknown;
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            storybookPackages?: Record<string, {
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            features?: {
                buildStoriesJson?: boolean | null | undefined;
                storyStoreV7?: boolean | null | undefined;
                storyStoreV7MdxErrors?: boolean | null | undefined;
                argTypeTargetsV7?: boolean | null | undefined;
                warnOnLegacyHierarchySeparator?: boolean | null | undefined;
                legacyMdx1?: boolean | null | undefined;
                legacyDecoratorFileOrder?: boolean | null | undefined;
            } | null | undefined;
            storybookVersionSpecifier: string;
            language: "typescript" | "javascript";
        }>>>;
        languages: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
            files: zod.ZodObject<{
                count: zod.ZodNumber;
                bytes: zod.ZodNumber;
                results: zod.ZodRecord<zod.ZodString, zod.ZodOptional<zod.ZodNullable<zod.ZodString>>>;
            }, "strip", zod.ZodTypeAny, {
                count: number;
                bytes: number;
                results: Record<string, string | null | undefined>;
            }, {
                count: number;
                bytes: number;
                results: Record<string, string | null | undefined>;
            }>;
            languages: zod.ZodObject<{
                count: zod.ZodNumber;
                bytes: zod.ZodNumber;
                results: zod.ZodRecord<zod.ZodString, zod.ZodObject<{
                    bytes: zod.ZodNumber;
                    type: zod.ZodNativeEnum<{
                        readonly Data: "data";
                        readonly Markup: "markup";
                        readonly Programming: "programming";
                        readonly Prose: "prose";
                    }>;
                    parent: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                    color: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                }, "strip", zod.ZodTypeAny, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>>;
            }, "strip", zod.ZodTypeAny, {
                count: number;
                bytes: number;
                results: Record<string, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>;
            }, {
                count: number;
                bytes: number;
                results: Record<string, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>;
            }>;
            unknown: zod.ZodObject<{
                count: zod.ZodNumber;
                bytes: zod.ZodNumber;
                extensions: zod.ZodRecord<zod.ZodString, zod.ZodNumber>;
                filenames: zod.ZodRecord<zod.ZodString, zod.ZodNumber>;
            }, "strip", zod.ZodTypeAny, {
                count: number;
                bytes: number;
                extensions: Record<string, number>;
                filenames: Record<string, number>;
            }, {
                count: number;
                bytes: number;
                extensions: Record<string, number>;
                filenames: Record<string, number>;
            }>;
        }, "strip", zod.ZodTypeAny, {
            unknown: {
                count: number;
                bytes: number;
                extensions: Record<string, number>;
                filenames: Record<string, number>;
            };
            files: {
                count: number;
                bytes: number;
                results: Record<string, string | null | undefined>;
            };
            languages: {
                count: number;
                bytes: number;
                results: Record<string, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>;
            };
        }, {
            unknown: {
                count: number;
                bytes: number;
                extensions: Record<string, number>;
                filenames: Record<string, number>;
            };
            files: {
                count: number;
                bytes: number;
                results: Record<string, string | null | undefined>;
            };
            languages: {
                count: number;
                bytes: number;
                results: Record<string, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>;
            };
        }>>>;
        uiDependencies: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
    }, "strip", zod.ZodTypeAny, {
        languages?: {
            unknown: {
                count: number;
                bytes: number;
                extensions: Record<string, number>;
                filenames: Record<string, number>;
            };
            files: {
                count: number;
                bytes: number;
                results: Record<string, string | null | undefined>;
            };
            languages: {
                count: number;
                bytes: number;
                results: Record<string, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>;
            };
        } | null | undefined;
        storybookMeta?: {
            storybookVersion?: string | null | undefined;
            generatedAt?: number | null | undefined;
            builder?: string | null | undefined;
            renderer?: string | null | undefined;
            hasStorybookEslint?: boolean | null | undefined;
            hasStaticDirs?: boolean | null | undefined;
            hasCustomWebpack?: boolean | null | undefined;
            hasCustomBabel?: boolean | null | undefined;
            refCount?: number | null | undefined;
            metaFramework?: {
                name: string;
                version: string;
                packageName: string;
            } | null | undefined;
            framework?: {
                options?: unknown;
                name: string;
            } | null | undefined;
            monorepo?: "Nx" | "Turborepo" | "Lerna" | "Rush" | "Lage" | "Workspaces" | null | undefined;
            packageManager?: {
                type: "npm" | "yarn" | "pnpm";
                version: string;
            } | null | undefined;
            typescriptOptions?: {
                check?: boolean | undefined;
                skipBabel?: boolean | undefined;
            } | null | undefined;
            addons?: Record<string, {
                options?: unknown;
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            storybookPackages?: Record<string, {
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            features?: {
                buildStoriesJson?: boolean | null | undefined;
                storyStoreV7?: boolean | null | undefined;
                storyStoreV7MdxErrors?: boolean | null | undefined;
                argTypeTargetsV7?: boolean | null | undefined;
                warnOnLegacyHierarchySeparator?: boolean | null | undefined;
                legacyMdx1?: boolean | null | undefined;
                legacyDecoratorFileOrder?: boolean | null | undefined;
            } | null | undefined;
            storybookVersionSpecifier: string;
            language: "typescript" | "javascript";
        } | null | undefined;
        uiDependencies?: string[] | null | undefined;
    }, {
        languages?: {
            unknown: {
                count: number;
                bytes: number;
                extensions: Record<string, number>;
                filenames: Record<string, number>;
            };
            files: {
                count: number;
                bytes: number;
                results: Record<string, string | null | undefined>;
            };
            languages: {
                count: number;
                bytes: number;
                results: Record<string, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>;
            };
        } | null | undefined;
        storybookMeta?: {
            storybookVersion?: string | null | undefined;
            generatedAt?: number | null | undefined;
            builder?: string | null | undefined;
            renderer?: string | null | undefined;
            hasStorybookEslint?: boolean | null | undefined;
            hasStaticDirs?: boolean | null | undefined;
            hasCustomWebpack?: boolean | null | undefined;
            hasCustomBabel?: boolean | null | undefined;
            refCount?: number | null | undefined;
            metaFramework?: {
                name: string;
                version: string;
                packageName: string;
            } | null | undefined;
            framework?: {
                options?: unknown;
                name: string;
            } | null | undefined;
            monorepo?: "Nx" | "Turborepo" | "Lerna" | "Rush" | "Lage" | "Workspaces" | null | undefined;
            packageManager?: {
                type: "npm" | "yarn" | "pnpm";
                version: string;
            } | null | undefined;
            typescriptOptions?: {
                check?: boolean | undefined;
                skipBabel?: boolean | undefined;
            } | null | undefined;
            addons?: Record<string, {
                options?: unknown;
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            storybookPackages?: Record<string, {
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            features?: {
                buildStoriesJson?: boolean | null | undefined;
                storyStoreV7?: boolean | null | undefined;
                storyStoreV7MdxErrors?: boolean | null | undefined;
                argTypeTargetsV7?: boolean | null | undefined;
                warnOnLegacyHierarchySeparator?: boolean | null | undefined;
                legacyMdx1?: boolean | null | undefined;
                legacyDecoratorFileOrder?: boolean | null | undefined;
            } | null | undefined;
            storybookVersionSpecifier: string;
            language: "typescript" | "javascript";
        } | null | undefined;
        uiDependencies?: string[] | null | undefined;
    }>;
    parse: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
        components: zod.ZodArray<zod.ZodObject<{
            id: zod.ZodString;
            name: zod.ZodString;
            path: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
            library: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
                name: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                version: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
            }, "strip", zod.ZodTypeAny, {
                name?: string | null | undefined;
                version?: string | null | undefined;
            }, {
                name?: string | null | undefined;
                version?: string | null | undefined;
            }>>>;
            tags: zod.ZodArray<zod.ZodString, "many">;
            description: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
            designDocs: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
            overriddenComponents: zod.ZodOptional<zod.ZodNullable<zod.ZodRecord<zod.ZodString, zod.ZodNumber>>>;
            filewiseOccurences: zod.ZodRecord<zod.ZodString, zod.ZodNumber>;
            designSystems: zod.ZodArray<zod.ZodObject<{
                id: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                url: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                relativePaths: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
                alias: zod.ZodString;
                tags: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodObject<{
                    name: zod.ZodString;
                    description: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                }, "strip", zod.ZodTypeAny, {
                    description?: string | null | undefined;
                    name: string;
                }, {
                    description?: string | null | undefined;
                    name: string;
                }>, "many">>>;
            }, "strip", zod.ZodTypeAny, {
                id?: string | null | undefined;
                url?: string | null | undefined;
                relativePaths?: string[] | null | undefined;
                tags?: {
                    description?: string | null | undefined;
                    name: string;
                }[] | null | undefined;
                alias: string;
            }, {
                id?: string | null | undefined;
                url?: string | null | undefined;
                relativePaths?: string[] | null | undefined;
                tags?: {
                    description?: string | null | undefined;
                    name: string;
                }[] | null | undefined;
                alias: string;
            }>, "many">;
            stories: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
            isSelfDeclared: zod.ZodBoolean;
            overriddenBy: zod.ZodOptional<zod.ZodNullable<zod.ZodRecord<zod.ZodString, zod.ZodNumber>>>;
            totalOccurences: zod.ZodNumber;
            storyURLs: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
            column: zod.ZodOptional<zod.ZodNullable<zod.ZodNumber>>;
            line: zod.ZodOptional<zod.ZodNullable<zod.ZodNumber>>;
            filewiseLocation: zod.ZodOptional<zod.ZodNullable<zod.ZodRecord<zod.ZodString, zod.ZodArray<zod.ZodObject<{
                lineNumber: zod.ZodNumber;
                columnNumber: zod.ZodNumber;
            }, "strip", zod.ZodTypeAny, {
                lineNumber: number;
                columnNumber: number;
            }, {
                lineNumber: number;
                columnNumber: number;
            }>, "many">>>>;
            isWebComponent: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
            props: zod.ZodOptional<zod.ZodNullable<zod.ZodRecord<zod.ZodString, zod.ZodArray<zod.ZodObject<{
                line: zod.ZodNumber;
                column: zod.ZodNumber;
                filePath: zod.ZodString;
            }, "strip", zod.ZodTypeAny, {
                line: number;
                column: number;
                filePath: string;
            }, {
                line: number;
                column: number;
                filePath: string;
            }>, "many">>>>;
        }, "strip", zod.ZodTypeAny, {
            description?: string | null | undefined;
            path?: string | null | undefined;
            line?: number | null | undefined;
            column?: number | null | undefined;
            library?: {
                name?: string | null | undefined;
                version?: string | null | undefined;
            } | null | undefined;
            designDocs?: string[] | null | undefined;
            overriddenComponents?: Record<string, number> | null | undefined;
            stories?: string[] | null | undefined;
            overriddenBy?: Record<string, number> | null | undefined;
            storyURLs?: string[] | null | undefined;
            filewiseLocation?: Record<string, {
                lineNumber: number;
                columnNumber: number;
            }[]> | null | undefined;
            isWebComponent?: boolean | null | undefined;
            props?: Record<string, {
                line: number;
                column: number;
                filePath: string;
            }[]> | null | undefined;
            name: string;
            id: string;
            tags: string[];
            filewiseOccurences: Record<string, number>;
            designSystems: {
                id?: string | null | undefined;
                url?: string | null | undefined;
                relativePaths?: string[] | null | undefined;
                tags?: {
                    description?: string | null | undefined;
                    name: string;
                }[] | null | undefined;
                alias: string;
            }[];
            isSelfDeclared: boolean;
            totalOccurences: number;
        }, {
            description?: string | null | undefined;
            path?: string | null | undefined;
            line?: number | null | undefined;
            column?: number | null | undefined;
            library?: {
                name?: string | null | undefined;
                version?: string | null | undefined;
            } | null | undefined;
            designDocs?: string[] | null | undefined;
            overriddenComponents?: Record<string, number> | null | undefined;
            stories?: string[] | null | undefined;
            overriddenBy?: Record<string, number> | null | undefined;
            storyURLs?: string[] | null | undefined;
            filewiseLocation?: Record<string, {
                lineNumber: number;
                columnNumber: number;
            }[]> | null | undefined;
            isWebComponent?: boolean | null | undefined;
            props?: Record<string, {
                line: number;
                column: number;
                filePath: string;
            }[]> | null | undefined;
            name: string;
            id: string;
            tags: string[];
            filewiseOccurences: Record<string, number>;
            designSystems: {
                id?: string | null | undefined;
                url?: string | null | undefined;
                relativePaths?: string[] | null | undefined;
                tags?: {
                    description?: string | null | undefined;
                    name: string;
                }[] | null | undefined;
                alias: string;
            }[];
            isSelfDeclared: boolean;
            totalOccurences: number;
        }>, "many">;
        componentStatistics: zod.ZodObject<{
            thirdPartyComponents: zod.ZodNumber;
            selfDeclaredComponents: zod.ZodNumber;
            totalComponents: zod.ZodNumber;
            designSystemsComponents: zod.ZodNumber;
            nonDesignSystemComponents: zod.ZodNumber;
            coverage: zod.ZodNumber;
        }, "strip", zod.ZodTypeAny, {
            thirdPartyComponents: number;
            selfDeclaredComponents: number;
            totalComponents: number;
            designSystemsComponents: number;
            nonDesignSystemComponents: number;
            coverage: number;
        }, {
            thirdPartyComponents: number;
            selfDeclaredComponents: number;
            totalComponents: number;
            designSystemsComponents: number;
            nonDesignSystemComponents: number;
            coverage: number;
        }>;
    }, "strip", zod.ZodTypeAny, {
        components: {
            description?: string | null | undefined;
            path?: string | null | undefined;
            line?: number | null | undefined;
            column?: number | null | undefined;
            library?: {
                name?: string | null | undefined;
                version?: string | null | undefined;
            } | null | undefined;
            designDocs?: string[] | null | undefined;
            overriddenComponents?: Record<string, number> | null | undefined;
            stories?: string[] | null | undefined;
            overriddenBy?: Record<string, number> | null | undefined;
            storyURLs?: string[] | null | undefined;
            filewiseLocation?: Record<string, {
                lineNumber: number;
                columnNumber: number;
            }[]> | null | undefined;
            isWebComponent?: boolean | null | undefined;
            props?: Record<string, {
                line: number;
                column: number;
                filePath: string;
            }[]> | null | undefined;
            name: string;
            id: string;
            tags: string[];
            filewiseOccurences: Record<string, number>;
            designSystems: {
                id?: string | null | undefined;
                url?: string | null | undefined;
                relativePaths?: string[] | null | undefined;
                tags?: {
                    description?: string | null | undefined;
                    name: string;
                }[] | null | undefined;
                alias: string;
            }[];
            isSelfDeclared: boolean;
            totalOccurences: number;
        }[];
        componentStatistics: {
            thirdPartyComponents: number;
            selfDeclaredComponents: number;
            totalComponents: number;
            designSystemsComponents: number;
            nonDesignSystemComponents: number;
            coverage: number;
        };
    }, {
        components: {
            description?: string | null | undefined;
            path?: string | null | undefined;
            line?: number | null | undefined;
            column?: number | null | undefined;
            library?: {
                name?: string | null | undefined;
                version?: string | null | undefined;
            } | null | undefined;
            designDocs?: string[] | null | undefined;
            overriddenComponents?: Record<string, number> | null | undefined;
            stories?: string[] | null | undefined;
            overriddenBy?: Record<string, number> | null | undefined;
            storyURLs?: string[] | null | undefined;
            filewiseLocation?: Record<string, {
                lineNumber: number;
                columnNumber: number;
            }[]> | null | undefined;
            isWebComponent?: boolean | null | undefined;
            props?: Record<string, {
                line: number;
                column: number;
                filePath: string;
            }[]> | null | undefined;
            name: string;
            id: string;
            tags: string[];
            filewiseOccurences: Record<string, number>;
            designSystems: {
                id?: string | null | undefined;
                url?: string | null | undefined;
                relativePaths?: string[] | null | undefined;
                tags?: {
                    description?: string | null | undefined;
                    name: string;
                }[] | null | undefined;
                alias: string;
            }[];
            isSelfDeclared: boolean;
            totalOccurences: number;
        }[];
        componentStatistics: {
            thirdPartyComponents: number;
            selfDeclaredComponents: number;
            totalComponents: number;
            designSystemsComponents: number;
            nonDesignSystemComponents: number;
            coverage: number;
        };
    }>>>;
    stories: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
        urls: zod.ZodOptional<zod.ZodNullable<zod.ZodRecord<zod.ZodString, zod.ZodArray<zod.ZodString, "many">>>>;
        meta: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
            v: zod.ZodNumber;
            stories: zod.ZodRecord<zod.ZodString, zod.ZodObject<{
                id: zod.ZodString;
                name: zod.ZodString;
                title: zod.ZodString;
                importPath: zod.ZodString;
                kind: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                story: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
                parameters: zod.ZodOptional<zod.ZodNullable<zod.ZodObject<{
                    fileName: zod.ZodString;
                    docsOnly: zod.ZodOptional<zod.ZodNullable<zod.ZodBoolean>>;
                    framework: zod.ZodString;
                    __id: zod.ZodString;
                    __isArgsStory: zod.ZodBoolean;
                }, "strip", zod.ZodTypeAny, {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                }, {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                }>>>;
            }, "strip", zod.ZodTypeAny, {
                kind?: string | null | undefined;
                story?: string | null | undefined;
                parameters?: {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                } | null | undefined;
                name: string;
                id: string;
                title: string;
                importPath: string;
            }, {
                kind?: string | null | undefined;
                story?: string | null | undefined;
                parameters?: {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                } | null | undefined;
                name: string;
                id: string;
                title: string;
                importPath: string;
            }>>;
        }, "strip", zod.ZodTypeAny, {
            stories: Record<string, {
                kind?: string | null | undefined;
                story?: string | null | undefined;
                parameters?: {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                } | null | undefined;
                name: string;
                id: string;
                title: string;
                importPath: string;
            }>;
            v: number;
        }, {
            stories: Record<string, {
                kind?: string | null | undefined;
                story?: string | null | undefined;
                parameters?: {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                } | null | undefined;
                name: string;
                id: string;
                title: string;
                importPath: string;
            }>;
            v: number;
        }>>>;
    }, "strip", zod.ZodTypeAny, {
        urls?: Record<string, string[]> | null | undefined;
        meta?: {
            stories: Record<string, {
                kind?: string | null | undefined;
                story?: string | null | undefined;
                parameters?: {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                } | null | undefined;
                name: string;
                id: string;
                title: string;
                importPath: string;
            }>;
            v: number;
        } | null | undefined;
    }, {
        urls?: Record<string, string[]> | null | undefined;
        meta?: {
            stories: Record<string, {
                kind?: string | null | undefined;
                story?: string | null | undefined;
                parameters?: {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                } | null | undefined;
                name: string;
                id: string;
                title: string;
                importPath: string;
            }>;
            v: number;
        } | null | undefined;
    }>>>;
    designTokens: zod.ZodRecord<zod.ZodString, zod.ZodArray<zod.ZodType<import("./design-tokens").DesignTokens, zod.ZodTypeDef, import("./design-tokens").DesignTokens>, "many">>;
    designSystems: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodObject<{
        id: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
        url: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
        relativePaths: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodString, "many">>>;
        alias: zod.ZodString;
        tags: zod.ZodOptional<zod.ZodNullable<zod.ZodArray<zod.ZodObject<{
            name: zod.ZodString;
            description: zod.ZodOptional<zod.ZodNullable<zod.ZodString>>;
        }, "strip", zod.ZodTypeAny, {
            description?: string | null | undefined;
            name: string;
        }, {
            description?: string | null | undefined;
            name: string;
        }>, "many">>>;
    }, "strip", zod.ZodTypeAny, {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }, {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }>, "many">>>;
}, "strip", zod.ZodTypeAny, {
    designSystems?: {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }[] | null | undefined;
    stories?: {
        urls?: Record<string, string[]> | null | undefined;
        meta?: {
            stories: Record<string, {
                kind?: string | null | undefined;
                story?: string | null | undefined;
                parameters?: {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                } | null | undefined;
                name: string;
                id: string;
                title: string;
                importPath: string;
            }>;
            v: number;
        } | null | undefined;
    } | null | undefined;
    timestamp?: string | null | undefined;
    projectID?: string | null | undefined;
    codebaseID?: string | null | undefined;
    userID?: string | number | null | undefined;
    parse?: {
        components: {
            description?: string | null | undefined;
            path?: string | null | undefined;
            line?: number | null | undefined;
            column?: number | null | undefined;
            library?: {
                name?: string | null | undefined;
                version?: string | null | undefined;
            } | null | undefined;
            designDocs?: string[] | null | undefined;
            overriddenComponents?: Record<string, number> | null | undefined;
            stories?: string[] | null | undefined;
            overriddenBy?: Record<string, number> | null | undefined;
            storyURLs?: string[] | null | undefined;
            filewiseLocation?: Record<string, {
                lineNumber: number;
                columnNumber: number;
            }[]> | null | undefined;
            isWebComponent?: boolean | null | undefined;
            props?: Record<string, {
                line: number;
                column: number;
                filePath: string;
            }[]> | null | undefined;
            name: string;
            id: string;
            tags: string[];
            filewiseOccurences: Record<string, number>;
            designSystems: {
                id?: string | null | undefined;
                url?: string | null | undefined;
                relativePaths?: string[] | null | undefined;
                tags?: {
                    description?: string | null | undefined;
                    name: string;
                }[] | null | undefined;
                alias: string;
            }[];
            isSelfDeclared: boolean;
            totalOccurences: number;
        }[];
        componentStatistics: {
            thirdPartyComponents: number;
            selfDeclaredComponents: number;
            totalComponents: number;
            designSystemsComponents: number;
            nonDesignSystemComponents: number;
            coverage: number;
        };
    } | null | undefined;
    detect: {
        languages?: {
            unknown: {
                count: number;
                bytes: number;
                extensions: Record<string, number>;
                filenames: Record<string, number>;
            };
            files: {
                count: number;
                bytes: number;
                results: Record<string, string | null | undefined>;
            };
            languages: {
                count: number;
                bytes: number;
                results: Record<string, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>;
            };
        } | null | undefined;
        storybookMeta?: {
            storybookVersion?: string | null | undefined;
            generatedAt?: number | null | undefined;
            builder?: string | null | undefined;
            renderer?: string | null | undefined;
            hasStorybookEslint?: boolean | null | undefined;
            hasStaticDirs?: boolean | null | undefined;
            hasCustomWebpack?: boolean | null | undefined;
            hasCustomBabel?: boolean | null | undefined;
            refCount?: number | null | undefined;
            metaFramework?: {
                name: string;
                version: string;
                packageName: string;
            } | null | undefined;
            framework?: {
                options?: unknown;
                name: string;
            } | null | undefined;
            monorepo?: "Nx" | "Turborepo" | "Lerna" | "Rush" | "Lage" | "Workspaces" | null | undefined;
            packageManager?: {
                type: "npm" | "yarn" | "pnpm";
                version: string;
            } | null | undefined;
            typescriptOptions?: {
                check?: boolean | undefined;
                skipBabel?: boolean | undefined;
            } | null | undefined;
            addons?: Record<string, {
                options?: unknown;
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            storybookPackages?: Record<string, {
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            features?: {
                buildStoriesJson?: boolean | null | undefined;
                storyStoreV7?: boolean | null | undefined;
                storyStoreV7MdxErrors?: boolean | null | undefined;
                argTypeTargetsV7?: boolean | null | undefined;
                warnOnLegacyHierarchySeparator?: boolean | null | undefined;
                legacyMdx1?: boolean | null | undefined;
                legacyDecoratorFileOrder?: boolean | null | undefined;
            } | null | undefined;
            storybookVersionSpecifier: string;
            language: "typescript" | "javascript";
        } | null | undefined;
        uiDependencies?: string[] | null | undefined;
    };
    designTokens: Record<string, import("./design-tokens").DesignTokens[]>;
}, {
    designSystems?: {
        id?: string | null | undefined;
        url?: string | null | undefined;
        relativePaths?: string[] | null | undefined;
        tags?: {
            description?: string | null | undefined;
            name: string;
        }[] | null | undefined;
        alias: string;
    }[] | null | undefined;
    stories?: {
        urls?: Record<string, string[]> | null | undefined;
        meta?: {
            stories: Record<string, {
                kind?: string | null | undefined;
                story?: string | null | undefined;
                parameters?: {
                    docsOnly?: boolean | null | undefined;
                    framework: string;
                    fileName: string;
                    __id: string;
                    __isArgsStory: boolean;
                } | null | undefined;
                name: string;
                id: string;
                title: string;
                importPath: string;
            }>;
            v: number;
        } | null | undefined;
    } | null | undefined;
    timestamp?: string | null | undefined;
    projectID?: string | null | undefined;
    codebaseID?: string | null | undefined;
    userID?: string | number | null | undefined;
    parse?: {
        components: {
            description?: string | null | undefined;
            path?: string | null | undefined;
            line?: number | null | undefined;
            column?: number | null | undefined;
            library?: {
                name?: string | null | undefined;
                version?: string | null | undefined;
            } | null | undefined;
            designDocs?: string[] | null | undefined;
            overriddenComponents?: Record<string, number> | null | undefined;
            stories?: string[] | null | undefined;
            overriddenBy?: Record<string, number> | null | undefined;
            storyURLs?: string[] | null | undefined;
            filewiseLocation?: Record<string, {
                lineNumber: number;
                columnNumber: number;
            }[]> | null | undefined;
            isWebComponent?: boolean | null | undefined;
            props?: Record<string, {
                line: number;
                column: number;
                filePath: string;
            }[]> | null | undefined;
            name: string;
            id: string;
            tags: string[];
            filewiseOccurences: Record<string, number>;
            designSystems: {
                id?: string | null | undefined;
                url?: string | null | undefined;
                relativePaths?: string[] | null | undefined;
                tags?: {
                    description?: string | null | undefined;
                    name: string;
                }[] | null | undefined;
                alias: string;
            }[];
            isSelfDeclared: boolean;
            totalOccurences: number;
        }[];
        componentStatistics: {
            thirdPartyComponents: number;
            selfDeclaredComponents: number;
            totalComponents: number;
            designSystemsComponents: number;
            nonDesignSystemComponents: number;
            coverage: number;
        };
    } | null | undefined;
    detect: {
        languages?: {
            unknown: {
                count: number;
                bytes: number;
                extensions: Record<string, number>;
                filenames: Record<string, number>;
            };
            files: {
                count: number;
                bytes: number;
                results: Record<string, string | null | undefined>;
            };
            languages: {
                count: number;
                bytes: number;
                results: Record<string, {
                    color?: string | null | undefined;
                    parent?: string | null | undefined;
                    type: "data" | "markup" | "programming" | "prose";
                    bytes: number;
                }>;
            };
        } | null | undefined;
        storybookMeta?: {
            storybookVersion?: string | null | undefined;
            generatedAt?: number | null | undefined;
            builder?: string | null | undefined;
            renderer?: string | null | undefined;
            hasStorybookEslint?: boolean | null | undefined;
            hasStaticDirs?: boolean | null | undefined;
            hasCustomWebpack?: boolean | null | undefined;
            hasCustomBabel?: boolean | null | undefined;
            refCount?: number | null | undefined;
            metaFramework?: {
                name: string;
                version: string;
                packageName: string;
            } | null | undefined;
            framework?: {
                options?: unknown;
                name: string;
            } | null | undefined;
            monorepo?: "Nx" | "Turborepo" | "Lerna" | "Rush" | "Lage" | "Workspaces" | null | undefined;
            packageManager?: {
                type: "npm" | "yarn" | "pnpm";
                version: string;
            } | null | undefined;
            typescriptOptions?: {
                check?: boolean | undefined;
                skipBabel?: boolean | undefined;
            } | null | undefined;
            addons?: Record<string, {
                options?: unknown;
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            storybookPackages?: Record<string, {
                version?: string | null | undefined;
                versionSpecifier?: string | null | undefined;
            }> | null | undefined;
            features?: {
                buildStoriesJson?: boolean | null | undefined;
                storyStoreV7?: boolean | null | undefined;
                storyStoreV7MdxErrors?: boolean | null | undefined;
                argTypeTargetsV7?: boolean | null | undefined;
                warnOnLegacyHierarchySeparator?: boolean | null | undefined;
                legacyMdx1?: boolean | null | undefined;
                legacyDecoratorFileOrder?: boolean | null | undefined;
            } | null | undefined;
            storybookVersionSpecifier: string;
            language: "typescript" | "javascript";
        } | null | undefined;
        uiDependencies?: string[] | null | undefined;
    };
    designTokens: Record<string, import("./design-tokens").DesignTokens[]>;
}>;
export type ScannerOutput = zod.infer<typeof ScannerOutputSchema>;
//# sourceMappingURL=scan.d.ts.map