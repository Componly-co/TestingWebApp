"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParserOutputSchema = exports.DesignSystemSchema = void 0;
const zod_1 = require("zod");
const DesignSystemTag = zod_1.z.object({
    name: zod_1.z.string(),
    description: zod_1.z.string().nullish(),
});
exports.DesignSystemSchema = zod_1.z.object({
    id: zod_1.z.string().uuid().nullish(),
    url: zod_1.z.string().nullish(),
    relativePaths: zod_1.z.string().array().nullish(),
    alias: zod_1.z.string(),
    tags: DesignSystemTag.array().nullish(),
});
const ComponentLocationSchema = zod_1.z.object({
    lineNumber: zod_1.z.number().int().min(0),
    columnNumber: zod_1.z.number().int().min(0),
});
const PropLocationSchema = zod_1.z.object({
    line: zod_1.z.number().int().min(0),
    column: zod_1.z.number().int().min(0),
    filePath: zod_1.z.string()
});
const ComponentInfoSchema = zod_1.z.object({
    id: zod_1.z.string(),
    name: zod_1.z.string(),
    path: zod_1.z.string().nullish(),
    library: zod_1.z.object({
        name: zod_1.z.string().nullish(),
        version: zod_1.z.string().nullish()
    }).nullish(),
    tags: zod_1.z.string().array(),
    description: zod_1.z.string().nullish(),
    designDocs: zod_1.z.string().array().nullish(),
    overriddenComponents: zod_1.z.record(zod_1.z.number()).nullish(),
    filewiseOccurences: zod_1.z.record(zod_1.z.string(), zod_1.z.number()),
    designSystems: exports.DesignSystemSchema.array(),
    stories: zod_1.z.string().array().nullish(),
    isSelfDeclared: zod_1.z.boolean(),
    overriddenBy: zod_1.z.record(zod_1.z.string(), zod_1.z.number()).nullish(),
    totalOccurences: zod_1.z.number().min(0),
    storyURLs: zod_1.z.string().array().nullish(),
    column: zod_1.z.number().nullish(),
    line: zod_1.z.number().nullish(),
    filewiseLocation: zod_1.z.record(zod_1.z.string(), ComponentLocationSchema.array()).nullish(),
    isWebComponent: zod_1.z.boolean().nullish(),
    props: zod_1.z.record(zod_1.z.string(), PropLocationSchema.array()).nullish(),
});
const ComponentStatisticsSchema = zod_1.z.object({
    thirdPartyComponents: zod_1.z.number().int().min(0),
    selfDeclaredComponents: zod_1.z.number().int().min(0),
    totalComponents: zod_1.z.number().int().min(0),
    designSystemsComponents: zod_1.z.number().int().min(0),
    nonDesignSystemComponents: zod_1.z.number().int().min(0),
    coverage: zod_1.z.number().min(0).max(100),
});
exports.ParserOutputSchema = zod_1.z.object({
    components: ComponentInfoSchema.array(),
    componentStatistics: ComponentStatisticsSchema,
});
