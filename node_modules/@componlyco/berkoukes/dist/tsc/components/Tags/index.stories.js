var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Stack } from "@mantine/core";
import { Avatar } from "../Avatar";
import { Variants } from "../Badge";
import { Checkbox } from "../Checkbox";
import { Tags, TagsSize } from "./index";
export default {
    title: "Tags",
    component: Tags,
    args: {
        label: "Label",
        variant: Variants.Neutral,
        icons: [
            _jsx(Checkbox, {}),
            _jsx(Avatar, { shape: "circle", type: "image", size: "xs", src: "https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=250&q=80" }),
        ],
        showClose: true
    },
};
var Template = function (args) { return (_jsxs(Stack, { children: [_jsx(Tags, __assign({ size: TagsSize.Large }, args)), _jsx(Tags, __assign({ size: TagsSize.Normal }, args))] })); };
export var Neutral = Template.bind({});
Neutral.args = {
    variant: Variants.Neutral,
};
export var Accent = Template.bind({});
Accent.args = {
    variant: Variants.Accent,
};
export var Warning = Template.bind({});
Warning.args = {
    variant: Variants.Warning,
};
export var Error = Template.bind({});
Error.args = {
    variant: Variants.Error,
};
export var Success = Template.bind({});
Success.args = {
    variant: Variants.Success,
};
