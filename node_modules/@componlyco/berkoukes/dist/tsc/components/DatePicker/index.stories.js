var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { DatePicker } from "./index";
import { useState } from 'react';
export default {
    title: "DatePicker",
    component: DatePicker,
    args: {
        scanItems: [
            {
                branch: "main",
                commitMessage: "Addin.componlyignore",
                createdAtDate: "2023-08-27",
                createdAtTime: "12:27",
                commitHash: "7dcf380357ddc197876adac97267d2db9170cbdc",
                value: 123,
                failed: false,
                project: 'Project Name',
                components: "12,678",
                coverage: 98,
                excludedComponents: ['@mui;', '@berkoues/ok', '.componly', '/long', '/long/', 'long/', 'long/long']
            },
            {
                branch: "main",
                commitMessage: " Addin.componlyignore",
                createdAtDate: "2023-07-28",
                createdAtTime: "12:28",
                commitHash: "7dcf380357ddc197876adac97267d2db9170cbdc",
                value: 222,
                failed: true,
                project: 'Project Name',
                components: "12,678",
                coverage: 98,
                excludedComponents: ['@mui/Stack', '.componly/long']
            },
            {
                branch: "main",
                commitMessage: "Addin.componlyignore",
                createdAtDate: "2023-07-29",
                createdAtTime: "12:28",
                commitHash: "7dcf380357ddc197876adac97267d2db9170cbdc",
                value: 333,
                failed: false,
                project: 'Project Name',
                components: "12,678",
                coverage: 98
            },
            {
                branch: "main",
                commitMessage: "Addin.componlyignore",
                createdAtDate: "2023-07-29",
                createdAtTime: "12:28",
                commitHash: "7dcf380357ddc197876adac97267d2db9170cbdc",
                value: 333,
                failed: false,
                project: 'Project Name',
                components: "12,678",
                coverage: 98
            },
            {
                branch: "main",
                commitMessage: "Addin.componlyignore",
                createdAtDate: "2023-07-29",
                createdAtTime: "12:28",
                commitHash: "7dcf380357ddc197876adac97267d2db9170cbdc",
                value: 333,
                failed: false,
                project: 'Project Name',
                components: "12,678",
                coverage: 98
            }
        ],
        codeBaseItems: [
            {
                "value": "code-base-1-code-base-1",
                "label": "code-base-1-code-base-1"
            },
            {
                "value": "code-base-2",
                "label": "code-base-2"
            },
            {
                "value": "code-base-3",
                "label": "code-base-3"
            }
        ]
    },
};
var Template = function (args) {
    var _a = useState(null), selectedCodeBase = _a[0], setCodeBase = _a[1];
    return _jsx(DatePicker, __assign({ selectedCodeBase: selectedCodeBase, onChangeCodeBase: function (val) { return setCodeBase(val); } }, args));
};
export var Month = Template.bind({});
export var Year = Template.bind({});
Year.args = {
    defaultLevel: "year",
};
export var Decade = Template.bind({});
Decade.args = {
    defaultLevel: "decade",
};
export var Range = Template.bind({});
Range.args = {
    type: "range",
};
export var Multiple = Template.bind({});
Multiple.args = {
    type: "multiple",
};
