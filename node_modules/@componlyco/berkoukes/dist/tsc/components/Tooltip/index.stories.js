var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Tooltip } from "./index";
import { Button } from "../Button";
export default {
    title: "Tooltip",
    component: Tooltip,
    argTypes: {
        position: {
            control: "select",
            options: [
                "top",
                "top-start",
                "top-end",
                "right",
                "right-start",
                "right-end",
                "bottom",
                "bottom-start",
                "bottom-end",
                "left",
                "left-start",
                "left-end",
            ],
        },
    },
    args: {
        position: "top",
        title: "Header",
        description: "In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content.",
    },
};
var Template = function (args) { return (_jsx(Tooltip, __assign({}, args, { children: _jsx(Button, { type: "primary", label: "My details" }) }))); };
export var WithArrows = Template.bind({});
WithArrows.args = {
    withArrow: true,
};
export var NoArrows = Template.bind({});
NoArrows.args = {
    withArrow: false,
};
export var WithButton = Template.bind({});
WithButton.args = {
    withButton: true,
    isControlled: true,
};
