var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ActionIcon, Group, Progress as MantineProgress, Text } from "@mantine/core";
import { Info } from "lucide-react";
import { Colors, FontSizes, Layout } from "../../design-tokens";
export function ProgressBar(_a) {
    var value = _a.value, label = _a.label, showInfoIcon = _a.showInfoIcon, sx = _a.sx, _b = _a.sxBar, sxBar = _b === void 0 ? { width: "100%", height: "6px" } : _b, onInfoClick = _a.onInfoClick, selector = _a.selector;
    return (_jsxs(Group, __assign({ sx: sx, spacing: Layout.md, noWrap: true }, { children: [_jsx(MantineProgress, __assign({ styles: {
                    root: __assign({}, sxBar),
                }, value: value, color: Colors.Default.Background }, selector)), typeof label === "string" ? (_jsx(Text, __assign({ style: __assign(__assign({ color: Colors.ProgressIndicator.Step.Default.Text }, FontSizes.Subtitle3), { whiteSpace: "nowrap" }) }, { children: label }))) : null, showInfoIcon === true ? (_jsx(ActionIcon, __assign({ radius: "xl", onClick: onInfoClick, sx: {
                    width: Layout.TBR,
                    minWidth: Layout.TBR,
                    height: Layout.TBR,
                    minHeight: Layout.TBR,
                } }, { children: _jsx(Info, { size: 16, color: Colors.ProgressIndicator.Step.Default.Text }) }))) : null] })));
}
