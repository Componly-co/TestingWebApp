var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { ProgressBar } from "./index";
export default {
    title: "ProgressBar",
    component: ProgressBar,
};
var Template = function (args) { return (_jsx("div", __assign({ style: { width: "300px" } }, { children: _jsx(ProgressBar, __assign({}, args)) }))); };
export var EmptyBar = Template.bind({});
EmptyBar.args = {
    value: 0,
    label: "0 of 5 tasks",
    showInfoIcon: true,
};
export var HalfBar = Template.bind({});
HalfBar.args = {
    value: 50,
    label: "0 of 5 tasks",
};
export var FullBar = Template.bind({});
FullBar.args = {
    value: 100,
    label: "0 of 5 tasks",
};
export var NoLabel = Template.bind({});
NoLabel.args = {
    value: 100,
};
