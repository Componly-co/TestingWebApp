var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Hexagon } from "lucide-react";
import { ButtonType } from "../Button";
import { ActionContainer, ActionContainerType } from "./index";
export default {
    title: "ActionContainer",
    component: ActionContainer,
};
var Template = function (args) { return _jsx(ActionContainer, __assign({}, args)); };
export var Primary = Template.bind({});
Primary.args = {
    type: ActionContainerType.Primary,
    buttons: [
        {
            type: ButtonType.Borders,
            label: "Cancel",
        },
        {
            type: ButtonType.Primary,
            label: "Confirm",
        },
    ],
};
export var Secondary = Template.bind({});
Secondary.args = {
    type: ActionContainerType.Secondary,
    buttons: [
        {
            type: ButtonType.Borders,
            label: "Button1",
        },
        {
            type: ButtonType.Secondary,
            label: "Button2",
        },
        {
            type: ButtonType.Primary,
            label: "Button3",
        },
        {
            type: ButtonType.NoBorders,
            icon: _jsx(Hexagon, {}),
        },
    ],
};
