var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { getStylesRef, Switch } from "@mantine/core";
import { Colors, Sizes } from "../../design-tokens";
export function Toggle(_a) {
    var _b;
    var checked = _a.checked, disabled = _a.disabled, sx = _a.sx, onChange = _a.onChange, selector = _a.selector;
    return (_jsx(Switch, __assign({ sx: sx, checked: checked, disabled: disabled, onChange: onChange, styles: {
            thumb: {
                height: Sizes.Toggle.Thumb.Height,
                width: Sizes.Toggle.Thumb.Width,
                ref: getStylesRef("thumb"),
            },
            track: {
                height: Sizes.Toggle.Track.Height,
                width: Sizes.Toggle.Track.Width,
                ref: getStylesRef("track"),
            },
            input: (_b = {},
                _b["&:checked +*> .".concat(getStylesRef("thumb"))] = {
                    left: 20,
                },
                _b["+ .".concat(getStylesRef("track"))] = {
                    background: Colors.Neutral[25],
                    border: "none",
                },
                _b["+*> .".concat(getStylesRef("thumb"))] = {
                    boxShadow: "0px 0px 2px 0.5px #0A090B05, 0px 7px 14px 0px #0A090B12;",
                },
                _b["&:focus:checked + .".concat(getStylesRef("thumb"))] = {
                    boxShadow: "0px 7px 14px 0px #0A090B12",
                },
                _b["&:checked + .".concat(getStylesRef("track"))] = {
                    background: Colors.Focused.Background,
                },
                _b["&:focus + .".concat(getStylesRef("track"))] = {
                    border: "2px solid ".concat(Colors.Focused.Border),
                    boxShadow: "0px 0px 0px 2px #2563EB3D",
                    background: Colors.Focused.Fade,
                },
                _b["&:focus:checked + .".concat(getStylesRef("track"))] = {
                    background: Colors.Focused.Background,
                },
                _b["&:hover:checked + .".concat(getStylesRef("track"))] = {
                    background: Colors.Hovered.Background,
                },
                _b["&:disabled+ .".concat(getStylesRef("track"))] = {
                    background: Colors.Disabled.Background,
                },
                _b["&:disabled:checked+ .".concat(getStylesRef("track"))] = {
                    background: Colors.Focused.Fade,
                },
                _b),
        } }, selector)));
}
