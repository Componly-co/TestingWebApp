var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Select } from "./index";
export default {
    title: "Select",
    component: Select,
    args: {
        data: [
            { value: "react", label: "React" },
            { value: "ng", label: "Angular" },
            { value: "svelte", label: "Svelte" },
            { value: "vue", label: "Vue" },
            { value: "next", label: "Next.js" },
        ],
        label: "Label",
        placeholder: "Select",
        optionalText: "Optional",
        helperText: "Helper text",
    },
};
var Template = function (args) { return _jsx(Select, __assign({}, args)); };
export var Default = Template.bind({});
export var Disabled = Template.bind({});
Disabled.args = {
    disabled: true,
};
export var Error = Template.bind({});
Error.args = {
    error: "Helper Text",
};
export var WithoutOptional = Template.bind({});
WithoutOptional.args = {
    optionalText: undefined,
};
