var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Avatar as MantineAvatar } from "@mantine/core";
import { Sizes, Colors } from "../../design-tokens";
export function Avatar(_a) {
    var selector = _a.selector, shape = _a.shape, size = _a.size, type = _a.type, letter = _a.letter, src = _a.src, border = _a.border, sx = _a.sx, imageSx = _a.imageSx;
    return (_jsx(MantineAvatar, __assign({ size: typeof size === "number" ? size : Sizes.Avatar[size !== null && size !== void 0 ? size : "xxl"], radius: shape === "square" ? "sm" : "50%", src: type === "image" ? src : undefined, sx: sx, style: { border: border }, styles: {
            placeholder: {
                color: Colors.Default.Background,
                background: type === "avatar" ? Colors.Disabled.Gray : Colors.Focused.Fade,
            },
            image: imageSx
        } }, selector, { children: type === "text" ? letter : undefined })));
}
