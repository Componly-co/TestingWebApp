var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { ProgressIndicator } from "./index";
export default {
    title: "ProgressIndicator",
    component: ProgressIndicator,
    args: {
        active: 0,
        steps: [
            {
                label: "1",
                description: "aasdas",
            },
            {
                label: "2",
                description: "aasdas",
            },
            {
                label: "3",
                description: "aasdas",
            },
            {
                label: "4",
                description: "aasdas",
            },
        ],
    },
};
export var Template = function (args) { return (_jsx(ProgressIndicator, __assign({}, args))); };
