var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Breadcrumbs } from "./index";
export default {
    title: "Breadcrumbs",
    component: Breadcrumbs,
    args: {
        onClickHome: function () { return alert('go home'); },
        items: [
            {
                label: 'link 1',
                onClick: function () { return alert('go to link 1'); }
            },
            {
                label: 'link 2',
                onClick: function () { return alert('go to link 2'); }
            }
        ]
    },
};
var Template = function (args) {
    return _jsx(Breadcrumbs, __assign({}, args));
};
export var Default = Template.bind({});
