var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Anchor, Breadcrumbs as MantineBreadcrumbs, Group } from "@mantine/core";
import { Home } from "lucide-react";
import { Colors, FontSizes } from "../../design-tokens";
export function Breadcrumbs(_a) {
    var sx = _a.sx, onClickHome = _a.onClickHome, items = _a.items;
    return (_jsxs(Group, __assign({ sx: sx }, { children: [onClickHome && _jsx(Anchor, __assign({ size: "xs", onClick: onClickHome }, { children: _jsx(Home, { style: { color: Colors.Breadcrumb } }) })), _jsx(MantineBreadcrumbs, __assign({ separator: "/" }, { children: items.map(function (_a, index, arr) {
                    var label = _a.label, onClick = _a.onClick;
                    return (_jsx(Anchor, __assign({ onClick: onClick, style: __assign({}, FontSizes.Button), color: index < arr.length - 1 ? Colors.Breadcrumb : Colors.Primary.blue }, { children: label })));
                }) }))] })));
}
