var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Settings } from "lucide-react";
import { Divider } from "./index";
export default {
    title: "Divider",
    component: Divider,
    parameters: {
        layout: "padded", // 'Divider' is not rendering its line when layout is centered
    },
};
var Template = function (args) { return (
// 'div' is needed here for loki testing
_jsx("div", { children: _jsx(Divider, __assign({}, args)) })); };
export var NoMessage = Template.bind({});
export var SimpleMessage = Template.bind({});
SimpleMessage.args = {
    message: "Center",
};
export var Icon = Template.bind({});
Icon.args = {
    message: "Continue",
    icon: _jsx(Settings, {}),
};
