var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { AvatarGroup } from "./index";
export default {
    title: "AvatarGroup",
    component: AvatarGroup,
};
var Template = function (args) {
    return _jsx(AvatarGroup, __assign({}, args));
};
var data = [
    {
        type: "text",
        letter: "A",
    },
    {
        type: "text",
        letter: "B",
    },
    {
        type: "text",
        letter: "C",
    },
    {
        type: "text",
        letter: "D",
    },
    {
        type: "text",
        letter: "E",
    },
];
export var SizeXS = Template.bind({});
SizeXS.args = {
    avatars: data,
    size: "xs",
    maxCount: 8,
};
export var SizeS = Template.bind({});
SizeS.args = {
    avatars: data,
    size: "s",
    maxCount: 4,
};
export var SizeM = Template.bind({});
SizeM.args = {
    avatars: data,
    size: "m",
    maxCount: 10,
};
