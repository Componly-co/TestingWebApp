var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { List } from "@mantine/core";
import { UploadItem } from "./index";
export default {
    title: "UploadItem",
    component: UploadItem,
    args: {
        fileName: "Ticket_Management_system.jpg",
        message: "Some message",
        progress: 50,
    },
};
var Template = function (args) { return (_jsx(List, __assign({ style: {
        width: "95vw",
    }, styles: {
        itemWrapper: {
            width: "100%",
            "&>span:nth-child(2)": {
                width: "100%",
            },
        },
    } }, { children: _jsx(UploadItem, __assign({}, args)) }))); };
export var Pending = Template.bind({});
Pending.args = {
    status: "pending",
};
export var InProgress = Template.bind({});
InProgress.args = {
    status: "in-progress",
};
export var Ready = Template.bind({});
Ready.args = {
    status: "ready",
};
export var Failed = Template.bind({});
Failed.args = {
    status: "failed",
};
