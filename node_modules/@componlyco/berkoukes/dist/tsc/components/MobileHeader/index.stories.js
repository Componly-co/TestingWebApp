var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Hexagon } from "lucide-react";
import { ButtonSizes, ButtonType } from "../Button";
import Default, { App, ActionHeader } from "../Header/index.stories";
import { MobileHeader } from "./index";
export default {
    title: "MobileHeader",
    component: MobileHeader,
};
var Template = function (args) { return (_jsx("div", __assign({ style: { width: "90vw" } }, { children: _jsx(MobileHeader, __assign({}, args)) }))); };
export var MobileApp = Template.bind({});
MobileApp.args = __assign(__assign({}, Default.args), App.args);
export var MobileWebappHeader = Template.bind({});
MobileWebappHeader.args = __assign(__assign(__assign({}, Default.args), App.args), { type: "webapp", height: 'auto', tabs: [
        {
            type: ButtonType.Secondary,
            size: ButtonSizes.Small,
            label: "Dashboard",
        },
        {
            type: ButtonType.NoBorders,
            size: ButtonSizes.Small,
            label: "Brands",
        },
        {
            type: ButtonType.NoBorders,
            size: ButtonSizes.Small,
            label: "Projects",
        },
        {
            type: ButtonType.NoBorders,
            size: ButtonSizes.Small,
            label: "Books",
        },
        {
            type: ButtonType.NoBorders,
            size: ButtonSizes.Small,
            label: "Design Systems",
        },
    ] });
export var MobileActionHeader = Template.bind({});
MobileActionHeader.args = __assign(__assign(__assign({}, Default.args), ActionHeader.args), { tabs: [
        {
            type: ButtonType.TextSecondary,
            size: ButtonSizes.Normal,
            label: "Product",
        },
        {
            type: ButtonType.TextSecondary,
            size: ButtonSizes.Normal,
            label: "Product",
        },
        {
            type: ButtonType.TextSecondary,
            size: ButtonSizes.Normal,
            label: "Product",
        },
        {
            type: ButtonType.TextSecondary,
            size: ButtonSizes.Normal,
            label: "Product",
        },
        {
            type: ButtonType.TextSecondary,
            size: ButtonSizes.Normal,
            label: "Product",
        },
    ], startButtons: [
        {
            type: ButtonType.Borders,
            size: ButtonSizes.Normal,
            label: "Back",
        },
        {
            type: ButtonType.Primary,
            size: ButtonSizes.Normal,
            icon: _jsx(Hexagon, {}),
        },
        {
            type: ButtonType.Primary,
            size: ButtonSizes.Normal,
            icon: _jsx(Hexagon, {}),
        },
    ] });
