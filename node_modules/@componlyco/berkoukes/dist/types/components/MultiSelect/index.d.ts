import type { TagsProps } from "../Tags";
import type { MultiSelectProps as MantineMultiSelectProps, SelectItem, StackProps } from "@mantine/core";
import type { MouseEventHandler } from "react";
import { TooltipProps } from "../Tooltip";
interface ValueType extends TagsProps {
    error?: string;
    focused?: boolean;
}
export interface MultiSelectProps extends MantineMultiSelectProps {
    data: (SelectItem & ValueType)[];
    error?: MantineMultiSelectProps["error"];
    placeholder?: string;
    label?: string;
    optionalText?: string;
    helperText?: string;
    disabled?: boolean;
    showHelpIcon?: boolean;
    searchable?: boolean;
    onHelpIconClick?: MouseEventHandler<HTMLButtonElement>;
    onChange?: MantineMultiSelectProps["onChange"];
    sx?: StackProps["sx"];
    helpTooltipProps?: TooltipProps;
    selector?: {
        [key: `data-${string}`]: string | number;
    };
    loading?: boolean;
    sxLoader?: any;
}
export declare function MultiSelect({ label, optionalText, onHelpIconClick, error, helperText, data, placeholder, disabled, sx, onChange, showHelpIcon, searchable, helpTooltipProps, selector, ...rest }: MultiSelectProps): JSX.Element;
interface SelectedItemProps {
    label?: any;
    onMouseDown?: any;
    selected?: any;
    ref?: any;
    truncate?: boolean;
}
export declare const SelectedItem: ({ label, onMouseDown, selected, ref, truncate }: SelectedItemProps) => JSX.Element;
export {};
//# sourceMappingURL=index.d.ts.map