/// <reference types="react" />
import type { UserProfileProps } from "../UserProfile";
import type { ButtonProps } from "../Button";
import type { HeaderProps as MantineHeaderProps } from "@mantine/core";
export declare const HeaderType: {
    readonly App: "app";
    readonly Secondary: "secondary";
    readonly Action: "action";
    readonly Webapp: "webapp";
};
type HeaderType = (typeof HeaderType)[keyof typeof HeaderType];
export interface HeaderProps {
    type?: HeaderType;
    tabs: ButtonProps[];
    startButtons?: ButtonProps[];
    endButtons?: ButtonProps[];
    profile?: UserProfileProps;
    pageName?: string;
    height?: string | number;
    onLogout?: ButtonProps["onClick"];
    sx?: MantineHeaderProps["sx"];
    withDivider?: boolean;
    selector?: {
        [key: `data-${string}`]: string | number;
    };
}
export declare function getLogo(type?: HeaderType, pageName?: string): JSX.Element;
export declare function Header({ tabs, profile, type, pageName, endButtons, startButtons, sx, height, withDivider, selector }: HeaderProps): JSX.Element;
export {};
//# sourceMappingURL=index.d.ts.map