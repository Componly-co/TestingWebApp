/// <reference types="react" />
import { MenuItemProps } from "@mantine/core/lib/Menu/MenuItem/MenuItem";
import type { AvatarProps } from "../Avatar";
import type { MenuProps } from "@mantine/core";
export declare const UserDropdownTypes: {
    readonly Contained: "contained";
    readonly NotContained: "not-contained";
};
type UserDropdownTypes = (typeof UserDropdownTypes)[keyof typeof UserDropdownTypes];
interface ItemProps extends MenuItemProps {
    label: string;
    onClick?: () => void;
    selector?: {
        [key: `data-${string}`]: string | number;
    };
}
export interface UserProfileProps {
    name: string;
    src: string;
    handle?: string;
    avatarSize?: AvatarProps["size"];
    avatarType: AvatarProps["type"];
    type?: UserDropdownTypes;
    width?: MenuProps["width"];
    styles?: MenuProps["styles"];
    items?: ItemProps[];
    selector?: {
        [key: `data-${string}`]: string | number;
    };
}
export declare function UserProfile({ src, handle, name, type, avatarSize, avatarType, width, styles, items, selector }: UserProfileProps): JSX.Element;
export {};
//# sourceMappingURL=index.d.ts.map