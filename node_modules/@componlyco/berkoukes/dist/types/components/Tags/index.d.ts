import { Variants } from "../Badge";
import type { CloseButtonProps, BadgeProps } from "@mantine/core";
import type { ReactNode } from "react";
export declare const TagsSize: {
    readonly Normal: "normal";
    readonly Large: "large";
};
type TagsSize = (typeof TagsSize)[keyof typeof TagsSize];
export interface TagsProps {
    label: any;
    className?: string;
    variant?: Variants;
    icons?: ReactNode[];
    size?: TagsSize;
    sx?: BadgeProps["sx"];
    onClose?: CloseButtonProps["onClick"];
    onClick?: React.MouseEventHandler<HTMLDivElement> | undefined;
    showClose?: boolean;
    selector?: {
        [key: `data-${string}`]: string | number;
    };
    style?: any;
}
export declare function Tags({ label, variant, icons, size, sx, onClose, onClick, className, showClose, selector, style }: TagsProps): JSX.Element;
export {};
//# sourceMappingURL=index.d.ts.map