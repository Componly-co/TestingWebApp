/// <reference types="react" />
import type { CloseButtonProps, BadgeProps as MantineBadgeProps } from "@mantine/core";
export declare const Variants: {
    readonly Neutral: "neutral";
    readonly Accent: "accent";
    readonly Error: "error";
    readonly Warning: "warning";
    readonly Success: "success";
};
export type Variants = (typeof Variants)[keyof typeof Variants];
export declare const Types: {
    readonly Filled: "filled";
    readonly Outline: "outline";
};
type Types = (typeof Types)[keyof typeof Types];
interface BadgeProps {
    label: string;
    type?: Types;
    variant?: Variants;
    closeable?: boolean;
    sx?: MantineBadgeProps["sx"];
    onClose?: CloseButtonProps["onClick"];
    selector?: {
        [key: `data-${string}`]: string | number;
    };
}
export declare function Badge({ label, type, variant, closeable, sx, onClose, selector }: BadgeProps): JSX.Element;
export {};
//# sourceMappingURL=index.d.ts.map