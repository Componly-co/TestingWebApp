import type { TabsProps } from "../Tabs";
import type { TagsProps } from "../Tags";
import type { CardProps as MantineCardProps } from "@mantine/core";
import type { MouseEventHandler } from "react";
interface TagsDatum {
    icon?: TagsProps["icons"];
    label?: TagsProps["label"];
}
interface ChartCardStyles {
    header?: string;
    tabs?: string;
    tagsRoot?: string;
    tags?: string;
    body?: string;
}
export interface ChartCardProps {
    primaryText: string;
    secondaryText?: string;
    buttonText?: string;
    onClick?: MouseEventHandler<HTMLButtonElement>;
    disabled?: boolean;
    withFooter?: boolean;
    withActions?: boolean;
    sx?: MantineCardProps["sx"];
    tabsItems?: TabsProps["tabItems"];
    tabsValue?: TabsProps["value"];
    tabsDefaultValue?: TabsProps["defaultValue"];
    tags?: TagsDatum[];
    children?: React.ReactNode;
    _classes?: ChartCardStyles;
    disableActions?: boolean;
    onClickActions?: MouseEventHandler<HTMLButtonElement>;
    selector?: {
        [key: `data-${string}`]: string | number;
    };
    id?: any;
}
export declare const ChartCard: ({ disabled, primaryText, secondaryText, onClick, sx, tabsItems, tabsValue, tabsDefaultValue, tags, buttonText, children, _classes, withFooter, withActions, disableActions, onClickActions, selector, id }: ChartCardProps) => JSX.Element;
export {};
//# sourceMappingURL=index.d.ts.map