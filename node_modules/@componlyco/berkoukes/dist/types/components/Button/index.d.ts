import { Colors } from "../../design-tokens";
import type { ButtonProps as MantineButtonProps, ActionIconProps } from "@mantine/core";
import type { MouseEventHandler, ReactNode } from "react";
type ButtonType = keyof typeof Colors.Button;
export declare const ButtonType: Record<string, ButtonType>;
export declare const ButtonSizes: {
    readonly Normal: "normal";
    readonly Small: "small";
};
type ButtonSizes = (typeof ButtonSizes)[keyof typeof ButtonSizes];
export interface ButtonProps {
    type: ButtonType;
    label?: string;
    onClick?: MouseEventHandler<HTMLButtonElement>;
    size?: ButtonSizes;
    icon?: ReactNode;
    disabled?: boolean;
    loading?: boolean;
    tailIcon?: ReactNode;
    sx?: MantineButtonProps["sx"] | ActionIconProps["sx"];
    buttonType?: MantineButtonProps["type"];
    selector?: {
        [key: `data-${string}`]: string | number;
    };
}
export declare function Button({ label, onClick, type, size, icon, disabled, loading, tailIcon, sx, buttonType, selector, }: ButtonProps): JSX.Element;
export {};
//# sourceMappingURL=index.d.ts.map